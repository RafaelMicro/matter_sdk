# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/pigweed.gni")
import("//build_overrides/rt582_sdk.gni")

import("${build_root}/config/defaults.gni")
import("${rt582_sdk_build_root}/rt582_executable.gni")
import("${rt582_sdk_build_root}/rt582_sdk.gni")
import("${chip_root}/src/platform/device.gni")

assert(current_os == "freertos")

rt582_project_dir = "${chip_root}/examples/lighting-app/rt582"
examples_plat_dir = "${chip_root}/examples/platform/rt582"
# _freertos_root = "${chip_root}/third_party/rafael/sdk/Portable/freertos/repo"

declare_args() {
  # PIN code for PASE session establishment.
  setupPinCode = 20202021
  setupDiscriminator = 3840

  # Enable Sleepy end device
  enable_sleepy_device = false

  # OTA timeout in seconds
  OTA_periodic_query_timeout = 86400

}

rt582_sdk("sdk") {
  sources = [
    "${rt582_project_dir}/include/CHIPProjectConfig.h",
    "${examples_plat_dir}/config/FreeRTOSConfig.h",
  ]

  include_dirs = [
    "${chip_root}/src/platform/RT582",
    "${rt582_project_dir}/include",
    "${examples_plat_dir}",
    "${chip_root}/src/lib",
  ]

  defines = [
    "CHIP_DEVICE_CONFIG_USE_TEST_SETUP_PIN_CODE=${setupPinCode}",
    "CHIP_DEVICE_CONFIG_USE_TEST_SETUP_DISCRIMINATOR=${setupDiscriminator}",
    "OTA_PERIODIC_TIMEOUT=${OTA_periodic_query_timeout}",
  ]
}

rt582_executable("lighting_app") {
  output_name = "chip-rt582-lighting-app-example.out"
  include_dirs = [ 
    "include",
    "${examples_plat_dir}/projcrt_peripheral/lighting_app"
  ]
  defines = []

  sources = [
    "${examples_plat_dir}/BaseApplication.cpp",
    "${examples_plat_dir}/heap_4_rt582.c",
    "${examples_plat_dir}/init_rt582Platform.cpp",
    "${examples_plat_dir}/projcrt_peripheral/lighting_app/init_lighting_rt582Platform.cpp",
    "${examples_plat_dir}/matter_config.cpp",
    "${examples_plat_dir}/uart.cpp",
    "${examples_plat_dir}/cmd_rafael.cpp",
    "include/LightingManager.h",
    "src/AppTask.cpp",
    "src/LightingManager.cpp",
    "src/ZclCallbacks.cpp",
    "src/main.cpp",
  ]

  deps = [
    ":sdk",
    "${chip_root}/examples/lighting-app/lighting-common",
    "${chip_root}/examples/lighting-app/lighting-common:color-format",
    "${chip_root}/examples/providers:device_info_provider",
    "${chip_root}/src/lib",
    "${chip_root}/src/setup_payload", 
    "${chip_root}/third_party/rafael/sdk/Portable/freertos",
  ]

  # OpenThread Settings
  if (chip_enable_openthread) {
    deps += [
      "${chip_root}/third_party/openthread:openthread",
      "${chip_root}/third_party/openthread:openthread-platform",
      "${examples_plat_dir}:rt582-matter-shell",
    ]
  }

  deps += [
    "${chip_root}/src/lib/shell:shell_core",
    "${chip_root}/src/lib/shell",
  ]

  if (chip_enable_ota_requestor) {
    defines += [ "RT582_OTA_ENABLED" ]
    sources += [ "${examples_plat_dir}/OTAConfig.cpp" ]
  }

  ldscript = "${examples_plat_dir}/ldscript/rt58x.ld"

  inputs = [ ldscript ]

  ldflags = [ "-T" + rebase_path(ldscript, root_build_dir) ]

  ldflags += [
    "-Wl,--print-memory-usage",
    "-fstack-usage",
    "-Wunused-variable"
  ]

  # Attestation Credentials
  if (chip_build_platform_attestation_credentials_provider) {
    defines += [ "CONFIG_CHIP_FACTORY_DATA" ]
    deps += [ "${chip_root}/src/platform/RT582:rt582-attestation-credentials" ]
  }

  output_dir = root_out_dir
}

group("rt582") {
  deps = [ ":lighting_app" ]
}

group("default") {
  deps = [ ":rt582" ]
}
