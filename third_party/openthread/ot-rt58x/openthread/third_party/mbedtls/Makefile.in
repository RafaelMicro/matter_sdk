# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
#    Copyright 2016 The OpenThread Authors. All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = third_party/mbedtls
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/ax_check_compiler.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage_reporting.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_debug.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_docs.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_optimization.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_tests.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_filtered_canonical.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_werror.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/openthread-config-generic.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libmbedcrypto_radio_a_AR = $(AR) $(ARFLAGS)
libmbedcrypto_radio_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libmbedcrypto_radio_a_OBJECTS =  \
	repo/library/libmbedcrypto_radio_a-aes.$(OBJEXT) \
	repo/library/libmbedcrypto_radio_a-platform_util.$(OBJEXT)
libmbedcrypto_radio_a_OBJECTS = $(am_libmbedcrypto_radio_a_OBJECTS)
libmbedcrypto_a_AR = $(AR) $(ARFLAGS)
libmbedcrypto_a_LIBADD =
am_libmbedcrypto_a_OBJECTS =  \
	repo/library/libmbedcrypto_a-aes.$(OBJEXT) \
	repo/library/libmbedcrypto_a-aesni.$(OBJEXT) \
	repo/library/libmbedcrypto_a-arc4.$(OBJEXT) \
	repo/library/libmbedcrypto_a-aria.$(OBJEXT) \
	repo/library/libmbedcrypto_a-asn1parse.$(OBJEXT) \
	repo/library/libmbedcrypto_a-asn1write.$(OBJEXT) \
	repo/library/libmbedcrypto_a-base64.$(OBJEXT) \
	repo/library/libmbedcrypto_a-bignum.$(OBJEXT) \
	repo/library/libmbedcrypto_a-blowfish.$(OBJEXT) \
	repo/library/libmbedcrypto_a-camellia.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ccm.$(OBJEXT) \
	repo/library/libmbedcrypto_a-certs.$(OBJEXT) \
	repo/library/libmbedcrypto_a-chacha20.$(OBJEXT) \
	repo/library/libmbedcrypto_a-chachapoly.$(OBJEXT) \
	repo/library/libmbedcrypto_a-cipher.$(OBJEXT) \
	repo/library/libmbedcrypto_a-cipher_wrap.$(OBJEXT) \
	repo/library/libmbedcrypto_a-cmac.$(OBJEXT) \
	repo/library/libmbedcrypto_a-constant_time.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ctr_drbg.$(OBJEXT) \
	repo/library/libmbedcrypto_a-debug.$(OBJEXT) \
	repo/library/libmbedcrypto_a-des.$(OBJEXT) \
	repo/library/libmbedcrypto_a-dhm.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ecdh.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ecdsa.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ecjpake.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ecp.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ecp_curves.$(OBJEXT) \
	repo/library/libmbedcrypto_a-entropy.$(OBJEXT) \
	repo/library/libmbedcrypto_a-entropy_poll.$(OBJEXT) \
	repo/library/libmbedcrypto_a-error.$(OBJEXT) \
	repo/library/libmbedcrypto_a-gcm.$(OBJEXT) \
	repo/library/libmbedcrypto_a-havege.$(OBJEXT) \
	repo/library/libmbedcrypto_a-hkdf.$(OBJEXT) \
	repo/library/libmbedcrypto_a-hmac_drbg.$(OBJEXT) \
	repo/library/libmbedcrypto_a-md.$(OBJEXT) \
	repo/library/libmbedcrypto_a-md2.$(OBJEXT) \
	repo/library/libmbedcrypto_a-md4.$(OBJEXT) \
	repo/library/libmbedcrypto_a-md5.$(OBJEXT) \
	repo/library/libmbedcrypto_a-mps_reader.$(OBJEXT) \
	repo/library/libmbedcrypto_a-mps_trace.$(OBJEXT) \
	repo/library/libmbedcrypto_a-memory_buffer_alloc.$(OBJEXT) \
	repo/library/libmbedcrypto_a-net_sockets.$(OBJEXT) \
	repo/library/libmbedcrypto_a-nist_kw.$(OBJEXT) \
	repo/library/libmbedcrypto_a-oid.$(OBJEXT) \
	repo/library/libmbedcrypto_a-padlock.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pem.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pk.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pk_wrap.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pkcs11.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pkcs12.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pkcs5.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pkparse.$(OBJEXT) \
	repo/library/libmbedcrypto_a-pkwrite.$(OBJEXT) \
	repo/library/libmbedcrypto_a-platform.$(OBJEXT) \
	repo/library/libmbedcrypto_a-platform_util.$(OBJEXT) \
	repo/library/libmbedcrypto_a-poly1305.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_aead.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_cipher.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_client.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_ecp.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_hash.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_mac.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_rsa.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_se.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_slot_management.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_crypto_storage.$(OBJEXT) \
	repo/library/libmbedcrypto_a-psa_its_file.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ripemd160.$(OBJEXT) \
	repo/library/libmbedcrypto_a-rsa.$(OBJEXT) \
	repo/library/libmbedcrypto_a-rsa_internal.$(OBJEXT) \
	repo/library/libmbedcrypto_a-sha1.$(OBJEXT) \
	repo/library/libmbedcrypto_a-sha256.$(OBJEXT) \
	repo/library/libmbedcrypto_a-sha512.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_cache.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_ciphersuites.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_cli.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_cookie.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_msg.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_srv.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_ticket.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_tls.$(OBJEXT) \
	repo/library/libmbedcrypto_a-ssl_tls13_keys.$(OBJEXT) \
	repo/library/libmbedcrypto_a-threading.$(OBJEXT) \
	repo/library/libmbedcrypto_a-timing.$(OBJEXT) \
	repo/library/libmbedcrypto_a-version.$(OBJEXT) \
	repo/library/libmbedcrypto_a-version_features.$(OBJEXT) \
	repo/library/libmbedcrypto_a-x509.$(OBJEXT) \
	repo/library/libmbedcrypto_a-x509_create.$(OBJEXT) \
	repo/library/libmbedcrypto_a-x509_crl.$(OBJEXT) \
	repo/library/libmbedcrypto_a-x509_crt.$(OBJEXT) \
	repo/library/libmbedcrypto_a-x509_csr.$(OBJEXT) \
	repo/library/libmbedcrypto_a-x509write_crt.$(OBJEXT) \
	repo/library/libmbedcrypto_a-x509write_csr.$(OBJEXT) \
	repo/library/libmbedcrypto_a-xtea.$(OBJEXT)
libmbedcrypto_a_OBJECTS = $(am_libmbedcrypto_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-aesni.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-arc4.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-aria.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-blowfish.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-camellia.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-certs.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-chacha20.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-chachapoly.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-constant_time.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-des.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-dhm.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-error.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-gcm.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-havege.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-hkdf.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-hmac_drbg.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-md.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-md2.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-md4.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-md5.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-mps_reader.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-mps_trace.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-net_sockets.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-nist_kw.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-padlock.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs11.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs12.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs5.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-pkwrite.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-poly1305.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_aead.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_cipher.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_client.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_driver_wrappers.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_ecp.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_hash.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_mac.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_rsa.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_se.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_slot_management.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_storage.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-psa_its_file.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ripemd160.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-rsa.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-rsa_internal.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-sha1.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-sha512.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cache.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_msg.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls13_keys.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-threading.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-timing.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-version.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-version_features.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-x509_create.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crl.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-x509_csr.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_crt.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_csr.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_a-xtea.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_radio_a-aes.Po \
	repo/library/$(DEPDIR)/libmbedcrypto_radio_a-platform_util.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libmbedcrypto_radio_a_SOURCES) $(libmbedcrypto_a_SOURCES)
DIST_SOURCES = $(libmbedcrypto_radio_a_SOURCES) \
	$(libmbedcrypto_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CMP = @CMP@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DOXYGEN_USE_DOT = @DOXYGEN_USE_DOT@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GENHTML = @GENHTML@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LCOV = @LCOV@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBOPENTHREAD_VERSION_AGE = @LIBOPENTHREAD_VERSION_AGE@
LIBOPENTHREAD_VERSION_CURRENT = @LIBOPENTHREAD_VERSION_CURRENT@
LIBOPENTHREAD_VERSION_INFO = @LIBOPENTHREAD_VERSION_INFO@
LIBOPENTHREAD_VERSION_REVISION = @LIBOPENTHREAD_VERSION_REVISION@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJCOPY = @OBJCOPY@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENTHREAD_CUSTOM_LINKER_FILE = @OPENTHREAD_CUSTOM_LINKER_FILE@
OPENTHREAD_NCP_SPINEL_ENCRYPTER_LIBS = @OPENTHREAD_NCP_SPINEL_ENCRYPTER_LIBS@
OPENTHREAD_NCP_VENDOR_HOOK_SOURCE = @OPENTHREAD_NCP_VENDOR_HOOK_SOURCE@
OPENTHREAD_VENDOR_EXTENSION_SOURCE = @OPENTHREAD_VENDOR_EXTENSION_SOURCE@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_nlbuild_autotools_dir = @abs_top_nlbuild_autotools_dir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
nl_filtered_build = @nl_filtered_build@
nl_filtered_build_cpu = @nl_filtered_build_cpu@
nl_filtered_build_os = @nl_filtered_build_os@
nl_filtered_build_vendor = @nl_filtered_build_vendor@
nl_filtered_host = @nl_filtered_host@
nl_filtered_host_cpu = @nl_filtered_host_cpu@
nl_filtered_host_os = @nl_filtered_host_os@
nl_filtered_host_vendor = @nl_filtered_host_vendor@
nlbuild_autotools_stem = @nlbuild_autotools_stem@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = \
    mbedtls-config.h                            \
    repo/include                                \
    $(NULL)

lib_LIBRARIES = \
    libmbedcrypto.a                             \
    libmbedcrypto-radio.a                       \
    $(NULL)

MBEDTLS_SRCDIR = $(top_srcdir)/third_party/mbedtls/repo
libmbedcrypto_a_CPPFLAGS = \
    -I$(top_srcdir)/include                     \
    -I$(top_srcdir)/src/core                    \
    -I$(MBEDTLS_SRCDIR)/include                 \
    $(MBEDTLS_CPPFLAGS)                         \
    $(NULL)

libmbedcrypto_a_SOURCES = \
    repo/library/aes.c                          \
    repo/library/aesni.c                        \
    repo/library/arc4.c                         \
    repo/library/aria.c                         \
    repo/library/asn1parse.c                    \
    repo/library/asn1write.c                    \
    repo/library/base64.c                       \
    repo/library/bignum.c                       \
    repo/library/blowfish.c                     \
    repo/library/camellia.c                     \
    repo/library/ccm.c                          \
    repo/library/certs.c                        \
    repo/library/chacha20.c                     \
    repo/library/chachapoly.c                   \
    repo/library/check_crypto_config.h          \
    repo/library/cipher.c                       \
    repo/library/cipher_wrap.c                  \
    repo/library/cmac.c                         \
    repo/library/common.h                       \
    repo/library/constant_time.c                \
    repo/library/constant_time_internal.h       \
    repo/library/constant_time_invasive.h       \
    repo/library/ctr_drbg.c                     \
    repo/library/debug.c                        \
    repo/library/des.c                          \
    repo/library/dhm.c                          \
    repo/library/ecdh.c                         \
    repo/library/ecdsa.c                        \
    repo/library/ecjpake.c                      \
    repo/library/ecp.c                          \
    repo/library/ecp_curves.c                   \
    repo/library/ecp_invasive.h                 \
    repo/library/entropy.c                      \
    repo/library/entropy_poll.c                 \
    repo/library/error.c                        \
    repo/library/gcm.c                          \
    repo/library/havege.c                       \
    repo/library/hkdf.c                         \
    repo/library/hmac_drbg.c                    \
    repo/library/md.c                           \
    repo/library/md2.c                          \
    repo/library/md4.c                          \
    repo/library/md5.c                          \
    repo/library/mps_common.h                   \
    repo/library/mps_error.h                    \
    repo/library/mps_reader.c                   \
    repo/library/mps_reader.h                   \
    repo/library/mps_trace.c                    \
    repo/library/mps_trace.h                    \
    repo/library/memory_buffer_alloc.c          \
    repo/library/net_sockets.c                  \
    repo/library/nist_kw.c                      \
    repo/library/oid.c                          \
    repo/library/padlock.c                      \
    repo/library/pem.c                          \
    repo/library/pk.c                           \
    repo/library/pk_wrap.c                      \
    repo/library/pkcs11.c                       \
    repo/library/pkcs12.c                       \
    repo/library/pkcs5.c                        \
    repo/library/pkparse.c                      \
    repo/library/pkwrite.c                      \
    repo/library/platform.c                     \
    repo/library/platform_util.c                \
    repo/library/poly1305.c                     \
    repo/library/psa_crypto.c                   \
    repo/library/psa_crypto_aead.c              \
    repo/library/psa_crypto_aead.h              \
    repo/library/psa_crypto_core.h              \
    repo/library/psa_crypto_cipher.c            \
    repo/library/psa_crypto_cipher.h            \
    repo/library/psa_crypto_client.c            \
    repo/library/psa_crypto_driver_wrappers.c   \
    repo/library/psa_crypto_driver_wrappers.h   \
    repo/library/psa_crypto_ecp.c               \
    repo/library/psa_crypto_ecp.h               \
    repo/library/psa_crypto_hash.c              \
    repo/library/psa_crypto_hash.h              \
    repo/library/psa_crypto_invasive.h          \
    repo/library/psa_crypto_its.h               \
    repo/library/psa_crypto_mac.c               \
    repo/library/psa_crypto_mac.h               \
    repo/library/psa_crypto_random_impl.h       \
    repo/library/psa_crypto_rsa.c               \
    repo/library/psa_crypto_rsa.h               \
    repo/library/psa_crypto_se.c                \
    repo/library/psa_crypto_se.h                \
    repo/library/psa_crypto_slot_management.c   \
    repo/library/psa_crypto_slot_management.h   \
    repo/library/psa_crypto_storage.c           \
    repo/library/psa_crypto_storage.h           \
    repo/library/psa_its_file.c                 \
    repo/library/ripemd160.c                    \
    repo/library/rsa.c                          \
    repo/library/rsa_internal.c                 \
    repo/library/sha1.c                         \
    repo/library/sha256.c                       \
    repo/library/sha512.c                       \
    repo/library/ssl_cache.c                    \
    repo/library/ssl_ciphersuites.c             \
    repo/library/ssl_cli.c                      \
    repo/library/ssl_cookie.c                   \
    repo/library/ssl_msg.c                      \
    repo/library/ssl_srv.c                      \
    repo/library/ssl_ticket.c                   \
    repo/library/ssl_tls.c                      \
    repo/library/ssl_tls13_keys.c               \
    repo/library/ssl_tls13_keys.h               \
    repo/library/threading.c                    \
    repo/library/timing.c                       \
    repo/library/version.c                      \
    repo/library/version_features.c             \
    repo/library/x509.c                         \
    repo/library/x509_create.c                  \
    repo/library/x509_crl.c                     \
    repo/library/x509_crt.c                     \
    repo/library/x509_csr.c                     \
    repo/library/x509write_crt.c                \
    repo/library/x509write_csr.c                \
    repo/library/xtea.c                         \
    $(NULL)

libmbedcrypto_radio_a_CPPFLAGS = \
    -I$(top_srcdir)/include                     \
    -I$(top_srcdir)/src/core                    \
    -I$(MBEDTLS_SRCDIR)/include                 \
    $(MBEDTLS_CPPFLAGS)                         \
    $(NULL)

libmbedcrypto_radio_a_SOURCES = \
    repo/library/aes.c                          \
    repo/library/platform_util.c                \
    $(NULL)

@OPENTHREAD_BUILD_COVERAGE_TRUE@Dash = -
@OPENTHREAD_BUILD_COVERAGE_TRUE@CLEANFILES = $(shell find $(top_builddir)/third_party/mbedtls $(Dash)name "*.gcda" $(Dash)o $(Dash)name "*.gcno")
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign third_party/mbedtls/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign third_party/mbedtls/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
repo/library/$(am__dirstamp):
	@$(MKDIR_P) repo/library
	@: > repo/library/$(am__dirstamp)
repo/library/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) repo/library/$(DEPDIR)
	@: > repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_radio_a-aes.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_radio_a-platform_util.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)

libmbedcrypto-radio.a: $(libmbedcrypto_radio_a_OBJECTS) $(libmbedcrypto_radio_a_DEPENDENCIES) $(EXTRA_libmbedcrypto_radio_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmbedcrypto-radio.a
	$(AM_V_AR)$(libmbedcrypto_radio_a_AR) libmbedcrypto-radio.a $(libmbedcrypto_radio_a_OBJECTS) $(libmbedcrypto_radio_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmbedcrypto-radio.a
repo/library/libmbedcrypto_a-aes.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-aesni.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-arc4.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-aria.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-asn1parse.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-asn1write.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-base64.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-bignum.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-blowfish.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-camellia.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ccm.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-certs.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-chacha20.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-chachapoly.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-cipher.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-cipher_wrap.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-cmac.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-constant_time.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ctr_drbg.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-debug.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-des.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-dhm.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ecdh.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ecdsa.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ecjpake.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ecp.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ecp_curves.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-entropy.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-entropy_poll.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-error.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-gcm.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-havege.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-hkdf.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-hmac_drbg.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-md.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-md2.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-md4.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-md5.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-mps_reader.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-mps_trace.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-memory_buffer_alloc.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-net_sockets.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-nist_kw.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-oid.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-padlock.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pem.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pk.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pk_wrap.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pkcs11.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pkcs12.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pkcs5.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pkparse.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-pkwrite.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-platform.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-platform_util.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-poly1305.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_aead.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_cipher.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_client.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_ecp.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_hash.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_mac.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_rsa.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_se.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_slot_management.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_crypto_storage.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-psa_its_file.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ripemd160.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-rsa.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-rsa_internal.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-sha1.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-sha256.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-sha512.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_cache.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_ciphersuites.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_cli.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_cookie.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_msg.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_srv.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_ticket.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_tls.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-ssl_tls13_keys.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-threading.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-timing.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-version.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-version_features.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-x509.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-x509_create.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-x509_crl.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-x509_crt.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-x509_csr.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-x509write_crt.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-x509write_csr.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)
repo/library/libmbedcrypto_a-xtea.$(OBJEXT):  \
	repo/library/$(am__dirstamp) \
	repo/library/$(DEPDIR)/$(am__dirstamp)

libmbedcrypto.a: $(libmbedcrypto_a_OBJECTS) $(libmbedcrypto_a_DEPENDENCIES) $(EXTRA_libmbedcrypto_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmbedcrypto.a
	$(AM_V_AR)$(libmbedcrypto_a_AR) libmbedcrypto.a $(libmbedcrypto_a_OBJECTS) $(libmbedcrypto_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmbedcrypto.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f repo/library/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-aesni.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-arc4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-aria.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-blowfish.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-camellia.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-certs.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-chacha20.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-chachapoly.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-constant_time.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-des.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-dhm.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-error.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-gcm.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-havege.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-hkdf.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-hmac_drbg.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-md.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-md2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-md4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-md5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-mps_reader.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-mps_trace.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-net_sockets.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-nist_kw.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-padlock.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs11.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs12.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-pkwrite.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-poly1305.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_aead.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_cipher.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_client.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_driver_wrappers.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_ecp.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_hash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_mac.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_rsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_se.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_slot_management.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_storage.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-psa_its_file.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ripemd160.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-rsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-rsa_internal.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-sha1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-sha512.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cache.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_msg.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls13_keys.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-threading.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-timing.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-version.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-version_features.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-x509_create.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crl.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-x509_csr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_crt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_csr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_a-xtea.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_radio_a-aes.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@repo/library/$(DEPDIR)/libmbedcrypto_radio_a-platform_util.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

repo/library/libmbedcrypto_radio_a-aes.o: repo/library/aes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_radio_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_radio_a-aes.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_radio_a-aes.Tpo -c -o repo/library/libmbedcrypto_radio_a-aes.o `test -f 'repo/library/aes.c' || echo '$(srcdir)/'`repo/library/aes.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_radio_a-aes.Tpo repo/library/$(DEPDIR)/libmbedcrypto_radio_a-aes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/aes.c' object='repo/library/libmbedcrypto_radio_a-aes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_radio_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_radio_a-aes.o `test -f 'repo/library/aes.c' || echo '$(srcdir)/'`repo/library/aes.c

repo/library/libmbedcrypto_radio_a-aes.obj: repo/library/aes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_radio_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_radio_a-aes.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_radio_a-aes.Tpo -c -o repo/library/libmbedcrypto_radio_a-aes.obj `if test -f 'repo/library/aes.c'; then $(CYGPATH_W) 'repo/library/aes.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/aes.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_radio_a-aes.Tpo repo/library/$(DEPDIR)/libmbedcrypto_radio_a-aes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/aes.c' object='repo/library/libmbedcrypto_radio_a-aes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_radio_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_radio_a-aes.obj `if test -f 'repo/library/aes.c'; then $(CYGPATH_W) 'repo/library/aes.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/aes.c'; fi`

repo/library/libmbedcrypto_radio_a-platform_util.o: repo/library/platform_util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_radio_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_radio_a-platform_util.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_radio_a-platform_util.Tpo -c -o repo/library/libmbedcrypto_radio_a-platform_util.o `test -f 'repo/library/platform_util.c' || echo '$(srcdir)/'`repo/library/platform_util.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_radio_a-platform_util.Tpo repo/library/$(DEPDIR)/libmbedcrypto_radio_a-platform_util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/platform_util.c' object='repo/library/libmbedcrypto_radio_a-platform_util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_radio_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_radio_a-platform_util.o `test -f 'repo/library/platform_util.c' || echo '$(srcdir)/'`repo/library/platform_util.c

repo/library/libmbedcrypto_radio_a-platform_util.obj: repo/library/platform_util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_radio_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_radio_a-platform_util.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_radio_a-platform_util.Tpo -c -o repo/library/libmbedcrypto_radio_a-platform_util.obj `if test -f 'repo/library/platform_util.c'; then $(CYGPATH_W) 'repo/library/platform_util.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/platform_util.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_radio_a-platform_util.Tpo repo/library/$(DEPDIR)/libmbedcrypto_radio_a-platform_util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/platform_util.c' object='repo/library/libmbedcrypto_radio_a-platform_util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_radio_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_radio_a-platform_util.obj `if test -f 'repo/library/platform_util.c'; then $(CYGPATH_W) 'repo/library/platform_util.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/platform_util.c'; fi`

repo/library/libmbedcrypto_a-aes.o: repo/library/aes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-aes.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Tpo -c -o repo/library/libmbedcrypto_a-aes.o `test -f 'repo/library/aes.c' || echo '$(srcdir)/'`repo/library/aes.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/aes.c' object='repo/library/libmbedcrypto_a-aes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-aes.o `test -f 'repo/library/aes.c' || echo '$(srcdir)/'`repo/library/aes.c

repo/library/libmbedcrypto_a-aes.obj: repo/library/aes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-aes.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Tpo -c -o repo/library/libmbedcrypto_a-aes.obj `if test -f 'repo/library/aes.c'; then $(CYGPATH_W) 'repo/library/aes.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/aes.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/aes.c' object='repo/library/libmbedcrypto_a-aes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-aes.obj `if test -f 'repo/library/aes.c'; then $(CYGPATH_W) 'repo/library/aes.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/aes.c'; fi`

repo/library/libmbedcrypto_a-aesni.o: repo/library/aesni.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-aesni.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-aesni.Tpo -c -o repo/library/libmbedcrypto_a-aesni.o `test -f 'repo/library/aesni.c' || echo '$(srcdir)/'`repo/library/aesni.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-aesni.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-aesni.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/aesni.c' object='repo/library/libmbedcrypto_a-aesni.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-aesni.o `test -f 'repo/library/aesni.c' || echo '$(srcdir)/'`repo/library/aesni.c

repo/library/libmbedcrypto_a-aesni.obj: repo/library/aesni.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-aesni.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-aesni.Tpo -c -o repo/library/libmbedcrypto_a-aesni.obj `if test -f 'repo/library/aesni.c'; then $(CYGPATH_W) 'repo/library/aesni.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/aesni.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-aesni.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-aesni.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/aesni.c' object='repo/library/libmbedcrypto_a-aesni.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-aesni.obj `if test -f 'repo/library/aesni.c'; then $(CYGPATH_W) 'repo/library/aesni.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/aesni.c'; fi`

repo/library/libmbedcrypto_a-arc4.o: repo/library/arc4.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-arc4.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-arc4.Tpo -c -o repo/library/libmbedcrypto_a-arc4.o `test -f 'repo/library/arc4.c' || echo '$(srcdir)/'`repo/library/arc4.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-arc4.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-arc4.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/arc4.c' object='repo/library/libmbedcrypto_a-arc4.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-arc4.o `test -f 'repo/library/arc4.c' || echo '$(srcdir)/'`repo/library/arc4.c

repo/library/libmbedcrypto_a-arc4.obj: repo/library/arc4.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-arc4.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-arc4.Tpo -c -o repo/library/libmbedcrypto_a-arc4.obj `if test -f 'repo/library/arc4.c'; then $(CYGPATH_W) 'repo/library/arc4.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/arc4.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-arc4.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-arc4.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/arc4.c' object='repo/library/libmbedcrypto_a-arc4.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-arc4.obj `if test -f 'repo/library/arc4.c'; then $(CYGPATH_W) 'repo/library/arc4.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/arc4.c'; fi`

repo/library/libmbedcrypto_a-aria.o: repo/library/aria.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-aria.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-aria.Tpo -c -o repo/library/libmbedcrypto_a-aria.o `test -f 'repo/library/aria.c' || echo '$(srcdir)/'`repo/library/aria.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-aria.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-aria.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/aria.c' object='repo/library/libmbedcrypto_a-aria.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-aria.o `test -f 'repo/library/aria.c' || echo '$(srcdir)/'`repo/library/aria.c

repo/library/libmbedcrypto_a-aria.obj: repo/library/aria.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-aria.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-aria.Tpo -c -o repo/library/libmbedcrypto_a-aria.obj `if test -f 'repo/library/aria.c'; then $(CYGPATH_W) 'repo/library/aria.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/aria.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-aria.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-aria.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/aria.c' object='repo/library/libmbedcrypto_a-aria.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-aria.obj `if test -f 'repo/library/aria.c'; then $(CYGPATH_W) 'repo/library/aria.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/aria.c'; fi`

repo/library/libmbedcrypto_a-asn1parse.o: repo/library/asn1parse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-asn1parse.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Tpo -c -o repo/library/libmbedcrypto_a-asn1parse.o `test -f 'repo/library/asn1parse.c' || echo '$(srcdir)/'`repo/library/asn1parse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/asn1parse.c' object='repo/library/libmbedcrypto_a-asn1parse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-asn1parse.o `test -f 'repo/library/asn1parse.c' || echo '$(srcdir)/'`repo/library/asn1parse.c

repo/library/libmbedcrypto_a-asn1parse.obj: repo/library/asn1parse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-asn1parse.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Tpo -c -o repo/library/libmbedcrypto_a-asn1parse.obj `if test -f 'repo/library/asn1parse.c'; then $(CYGPATH_W) 'repo/library/asn1parse.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/asn1parse.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/asn1parse.c' object='repo/library/libmbedcrypto_a-asn1parse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-asn1parse.obj `if test -f 'repo/library/asn1parse.c'; then $(CYGPATH_W) 'repo/library/asn1parse.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/asn1parse.c'; fi`

repo/library/libmbedcrypto_a-asn1write.o: repo/library/asn1write.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-asn1write.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Tpo -c -o repo/library/libmbedcrypto_a-asn1write.o `test -f 'repo/library/asn1write.c' || echo '$(srcdir)/'`repo/library/asn1write.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/asn1write.c' object='repo/library/libmbedcrypto_a-asn1write.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-asn1write.o `test -f 'repo/library/asn1write.c' || echo '$(srcdir)/'`repo/library/asn1write.c

repo/library/libmbedcrypto_a-asn1write.obj: repo/library/asn1write.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-asn1write.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Tpo -c -o repo/library/libmbedcrypto_a-asn1write.obj `if test -f 'repo/library/asn1write.c'; then $(CYGPATH_W) 'repo/library/asn1write.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/asn1write.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/asn1write.c' object='repo/library/libmbedcrypto_a-asn1write.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-asn1write.obj `if test -f 'repo/library/asn1write.c'; then $(CYGPATH_W) 'repo/library/asn1write.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/asn1write.c'; fi`

repo/library/libmbedcrypto_a-base64.o: repo/library/base64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-base64.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Tpo -c -o repo/library/libmbedcrypto_a-base64.o `test -f 'repo/library/base64.c' || echo '$(srcdir)/'`repo/library/base64.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/base64.c' object='repo/library/libmbedcrypto_a-base64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-base64.o `test -f 'repo/library/base64.c' || echo '$(srcdir)/'`repo/library/base64.c

repo/library/libmbedcrypto_a-base64.obj: repo/library/base64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-base64.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Tpo -c -o repo/library/libmbedcrypto_a-base64.obj `if test -f 'repo/library/base64.c'; then $(CYGPATH_W) 'repo/library/base64.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/base64.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/base64.c' object='repo/library/libmbedcrypto_a-base64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-base64.obj `if test -f 'repo/library/base64.c'; then $(CYGPATH_W) 'repo/library/base64.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/base64.c'; fi`

repo/library/libmbedcrypto_a-bignum.o: repo/library/bignum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-bignum.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Tpo -c -o repo/library/libmbedcrypto_a-bignum.o `test -f 'repo/library/bignum.c' || echo '$(srcdir)/'`repo/library/bignum.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/bignum.c' object='repo/library/libmbedcrypto_a-bignum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-bignum.o `test -f 'repo/library/bignum.c' || echo '$(srcdir)/'`repo/library/bignum.c

repo/library/libmbedcrypto_a-bignum.obj: repo/library/bignum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-bignum.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Tpo -c -o repo/library/libmbedcrypto_a-bignum.obj `if test -f 'repo/library/bignum.c'; then $(CYGPATH_W) 'repo/library/bignum.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/bignum.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/bignum.c' object='repo/library/libmbedcrypto_a-bignum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-bignum.obj `if test -f 'repo/library/bignum.c'; then $(CYGPATH_W) 'repo/library/bignum.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/bignum.c'; fi`

repo/library/libmbedcrypto_a-blowfish.o: repo/library/blowfish.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-blowfish.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-blowfish.Tpo -c -o repo/library/libmbedcrypto_a-blowfish.o `test -f 'repo/library/blowfish.c' || echo '$(srcdir)/'`repo/library/blowfish.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-blowfish.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-blowfish.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/blowfish.c' object='repo/library/libmbedcrypto_a-blowfish.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-blowfish.o `test -f 'repo/library/blowfish.c' || echo '$(srcdir)/'`repo/library/blowfish.c

repo/library/libmbedcrypto_a-blowfish.obj: repo/library/blowfish.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-blowfish.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-blowfish.Tpo -c -o repo/library/libmbedcrypto_a-blowfish.obj `if test -f 'repo/library/blowfish.c'; then $(CYGPATH_W) 'repo/library/blowfish.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/blowfish.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-blowfish.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-blowfish.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/blowfish.c' object='repo/library/libmbedcrypto_a-blowfish.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-blowfish.obj `if test -f 'repo/library/blowfish.c'; then $(CYGPATH_W) 'repo/library/blowfish.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/blowfish.c'; fi`

repo/library/libmbedcrypto_a-camellia.o: repo/library/camellia.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-camellia.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-camellia.Tpo -c -o repo/library/libmbedcrypto_a-camellia.o `test -f 'repo/library/camellia.c' || echo '$(srcdir)/'`repo/library/camellia.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-camellia.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-camellia.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/camellia.c' object='repo/library/libmbedcrypto_a-camellia.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-camellia.o `test -f 'repo/library/camellia.c' || echo '$(srcdir)/'`repo/library/camellia.c

repo/library/libmbedcrypto_a-camellia.obj: repo/library/camellia.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-camellia.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-camellia.Tpo -c -o repo/library/libmbedcrypto_a-camellia.obj `if test -f 'repo/library/camellia.c'; then $(CYGPATH_W) 'repo/library/camellia.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/camellia.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-camellia.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-camellia.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/camellia.c' object='repo/library/libmbedcrypto_a-camellia.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-camellia.obj `if test -f 'repo/library/camellia.c'; then $(CYGPATH_W) 'repo/library/camellia.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/camellia.c'; fi`

repo/library/libmbedcrypto_a-ccm.o: repo/library/ccm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ccm.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Tpo -c -o repo/library/libmbedcrypto_a-ccm.o `test -f 'repo/library/ccm.c' || echo '$(srcdir)/'`repo/library/ccm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ccm.c' object='repo/library/libmbedcrypto_a-ccm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ccm.o `test -f 'repo/library/ccm.c' || echo '$(srcdir)/'`repo/library/ccm.c

repo/library/libmbedcrypto_a-ccm.obj: repo/library/ccm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ccm.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Tpo -c -o repo/library/libmbedcrypto_a-ccm.obj `if test -f 'repo/library/ccm.c'; then $(CYGPATH_W) 'repo/library/ccm.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ccm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ccm.c' object='repo/library/libmbedcrypto_a-ccm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ccm.obj `if test -f 'repo/library/ccm.c'; then $(CYGPATH_W) 'repo/library/ccm.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ccm.c'; fi`

repo/library/libmbedcrypto_a-certs.o: repo/library/certs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-certs.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-certs.Tpo -c -o repo/library/libmbedcrypto_a-certs.o `test -f 'repo/library/certs.c' || echo '$(srcdir)/'`repo/library/certs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-certs.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-certs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/certs.c' object='repo/library/libmbedcrypto_a-certs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-certs.o `test -f 'repo/library/certs.c' || echo '$(srcdir)/'`repo/library/certs.c

repo/library/libmbedcrypto_a-certs.obj: repo/library/certs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-certs.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-certs.Tpo -c -o repo/library/libmbedcrypto_a-certs.obj `if test -f 'repo/library/certs.c'; then $(CYGPATH_W) 'repo/library/certs.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/certs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-certs.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-certs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/certs.c' object='repo/library/libmbedcrypto_a-certs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-certs.obj `if test -f 'repo/library/certs.c'; then $(CYGPATH_W) 'repo/library/certs.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/certs.c'; fi`

repo/library/libmbedcrypto_a-chacha20.o: repo/library/chacha20.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-chacha20.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-chacha20.Tpo -c -o repo/library/libmbedcrypto_a-chacha20.o `test -f 'repo/library/chacha20.c' || echo '$(srcdir)/'`repo/library/chacha20.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-chacha20.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-chacha20.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/chacha20.c' object='repo/library/libmbedcrypto_a-chacha20.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-chacha20.o `test -f 'repo/library/chacha20.c' || echo '$(srcdir)/'`repo/library/chacha20.c

repo/library/libmbedcrypto_a-chacha20.obj: repo/library/chacha20.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-chacha20.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-chacha20.Tpo -c -o repo/library/libmbedcrypto_a-chacha20.obj `if test -f 'repo/library/chacha20.c'; then $(CYGPATH_W) 'repo/library/chacha20.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/chacha20.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-chacha20.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-chacha20.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/chacha20.c' object='repo/library/libmbedcrypto_a-chacha20.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-chacha20.obj `if test -f 'repo/library/chacha20.c'; then $(CYGPATH_W) 'repo/library/chacha20.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/chacha20.c'; fi`

repo/library/libmbedcrypto_a-chachapoly.o: repo/library/chachapoly.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-chachapoly.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-chachapoly.Tpo -c -o repo/library/libmbedcrypto_a-chachapoly.o `test -f 'repo/library/chachapoly.c' || echo '$(srcdir)/'`repo/library/chachapoly.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-chachapoly.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-chachapoly.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/chachapoly.c' object='repo/library/libmbedcrypto_a-chachapoly.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-chachapoly.o `test -f 'repo/library/chachapoly.c' || echo '$(srcdir)/'`repo/library/chachapoly.c

repo/library/libmbedcrypto_a-chachapoly.obj: repo/library/chachapoly.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-chachapoly.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-chachapoly.Tpo -c -o repo/library/libmbedcrypto_a-chachapoly.obj `if test -f 'repo/library/chachapoly.c'; then $(CYGPATH_W) 'repo/library/chachapoly.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/chachapoly.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-chachapoly.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-chachapoly.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/chachapoly.c' object='repo/library/libmbedcrypto_a-chachapoly.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-chachapoly.obj `if test -f 'repo/library/chachapoly.c'; then $(CYGPATH_W) 'repo/library/chachapoly.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/chachapoly.c'; fi`

repo/library/libmbedcrypto_a-cipher.o: repo/library/cipher.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cipher.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Tpo -c -o repo/library/libmbedcrypto_a-cipher.o `test -f 'repo/library/cipher.c' || echo '$(srcdir)/'`repo/library/cipher.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cipher.c' object='repo/library/libmbedcrypto_a-cipher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cipher.o `test -f 'repo/library/cipher.c' || echo '$(srcdir)/'`repo/library/cipher.c

repo/library/libmbedcrypto_a-cipher.obj: repo/library/cipher.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cipher.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Tpo -c -o repo/library/libmbedcrypto_a-cipher.obj `if test -f 'repo/library/cipher.c'; then $(CYGPATH_W) 'repo/library/cipher.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cipher.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cipher.c' object='repo/library/libmbedcrypto_a-cipher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cipher.obj `if test -f 'repo/library/cipher.c'; then $(CYGPATH_W) 'repo/library/cipher.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cipher.c'; fi`

repo/library/libmbedcrypto_a-cipher_wrap.o: repo/library/cipher_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cipher_wrap.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Tpo -c -o repo/library/libmbedcrypto_a-cipher_wrap.o `test -f 'repo/library/cipher_wrap.c' || echo '$(srcdir)/'`repo/library/cipher_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cipher_wrap.c' object='repo/library/libmbedcrypto_a-cipher_wrap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cipher_wrap.o `test -f 'repo/library/cipher_wrap.c' || echo '$(srcdir)/'`repo/library/cipher_wrap.c

repo/library/libmbedcrypto_a-cipher_wrap.obj: repo/library/cipher_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cipher_wrap.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Tpo -c -o repo/library/libmbedcrypto_a-cipher_wrap.obj `if test -f 'repo/library/cipher_wrap.c'; then $(CYGPATH_W) 'repo/library/cipher_wrap.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cipher_wrap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cipher_wrap.c' object='repo/library/libmbedcrypto_a-cipher_wrap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cipher_wrap.obj `if test -f 'repo/library/cipher_wrap.c'; then $(CYGPATH_W) 'repo/library/cipher_wrap.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cipher_wrap.c'; fi`

repo/library/libmbedcrypto_a-cmac.o: repo/library/cmac.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cmac.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Tpo -c -o repo/library/libmbedcrypto_a-cmac.o `test -f 'repo/library/cmac.c' || echo '$(srcdir)/'`repo/library/cmac.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cmac.c' object='repo/library/libmbedcrypto_a-cmac.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cmac.o `test -f 'repo/library/cmac.c' || echo '$(srcdir)/'`repo/library/cmac.c

repo/library/libmbedcrypto_a-cmac.obj: repo/library/cmac.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-cmac.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Tpo -c -o repo/library/libmbedcrypto_a-cmac.obj `if test -f 'repo/library/cmac.c'; then $(CYGPATH_W) 'repo/library/cmac.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cmac.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/cmac.c' object='repo/library/libmbedcrypto_a-cmac.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-cmac.obj `if test -f 'repo/library/cmac.c'; then $(CYGPATH_W) 'repo/library/cmac.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/cmac.c'; fi`

repo/library/libmbedcrypto_a-constant_time.o: repo/library/constant_time.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-constant_time.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-constant_time.Tpo -c -o repo/library/libmbedcrypto_a-constant_time.o `test -f 'repo/library/constant_time.c' || echo '$(srcdir)/'`repo/library/constant_time.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-constant_time.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-constant_time.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/constant_time.c' object='repo/library/libmbedcrypto_a-constant_time.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-constant_time.o `test -f 'repo/library/constant_time.c' || echo '$(srcdir)/'`repo/library/constant_time.c

repo/library/libmbedcrypto_a-constant_time.obj: repo/library/constant_time.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-constant_time.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-constant_time.Tpo -c -o repo/library/libmbedcrypto_a-constant_time.obj `if test -f 'repo/library/constant_time.c'; then $(CYGPATH_W) 'repo/library/constant_time.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/constant_time.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-constant_time.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-constant_time.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/constant_time.c' object='repo/library/libmbedcrypto_a-constant_time.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-constant_time.obj `if test -f 'repo/library/constant_time.c'; then $(CYGPATH_W) 'repo/library/constant_time.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/constant_time.c'; fi`

repo/library/libmbedcrypto_a-ctr_drbg.o: repo/library/ctr_drbg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ctr_drbg.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Tpo -c -o repo/library/libmbedcrypto_a-ctr_drbg.o `test -f 'repo/library/ctr_drbg.c' || echo '$(srcdir)/'`repo/library/ctr_drbg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ctr_drbg.c' object='repo/library/libmbedcrypto_a-ctr_drbg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ctr_drbg.o `test -f 'repo/library/ctr_drbg.c' || echo '$(srcdir)/'`repo/library/ctr_drbg.c

repo/library/libmbedcrypto_a-ctr_drbg.obj: repo/library/ctr_drbg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ctr_drbg.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Tpo -c -o repo/library/libmbedcrypto_a-ctr_drbg.obj `if test -f 'repo/library/ctr_drbg.c'; then $(CYGPATH_W) 'repo/library/ctr_drbg.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ctr_drbg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ctr_drbg.c' object='repo/library/libmbedcrypto_a-ctr_drbg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ctr_drbg.obj `if test -f 'repo/library/ctr_drbg.c'; then $(CYGPATH_W) 'repo/library/ctr_drbg.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ctr_drbg.c'; fi`

repo/library/libmbedcrypto_a-debug.o: repo/library/debug.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-debug.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Tpo -c -o repo/library/libmbedcrypto_a-debug.o `test -f 'repo/library/debug.c' || echo '$(srcdir)/'`repo/library/debug.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/debug.c' object='repo/library/libmbedcrypto_a-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-debug.o `test -f 'repo/library/debug.c' || echo '$(srcdir)/'`repo/library/debug.c

repo/library/libmbedcrypto_a-debug.obj: repo/library/debug.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-debug.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Tpo -c -o repo/library/libmbedcrypto_a-debug.obj `if test -f 'repo/library/debug.c'; then $(CYGPATH_W) 'repo/library/debug.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/debug.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/debug.c' object='repo/library/libmbedcrypto_a-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-debug.obj `if test -f 'repo/library/debug.c'; then $(CYGPATH_W) 'repo/library/debug.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/debug.c'; fi`

repo/library/libmbedcrypto_a-des.o: repo/library/des.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-des.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-des.Tpo -c -o repo/library/libmbedcrypto_a-des.o `test -f 'repo/library/des.c' || echo '$(srcdir)/'`repo/library/des.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-des.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-des.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/des.c' object='repo/library/libmbedcrypto_a-des.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-des.o `test -f 'repo/library/des.c' || echo '$(srcdir)/'`repo/library/des.c

repo/library/libmbedcrypto_a-des.obj: repo/library/des.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-des.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-des.Tpo -c -o repo/library/libmbedcrypto_a-des.obj `if test -f 'repo/library/des.c'; then $(CYGPATH_W) 'repo/library/des.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/des.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-des.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-des.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/des.c' object='repo/library/libmbedcrypto_a-des.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-des.obj `if test -f 'repo/library/des.c'; then $(CYGPATH_W) 'repo/library/des.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/des.c'; fi`

repo/library/libmbedcrypto_a-dhm.o: repo/library/dhm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-dhm.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-dhm.Tpo -c -o repo/library/libmbedcrypto_a-dhm.o `test -f 'repo/library/dhm.c' || echo '$(srcdir)/'`repo/library/dhm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-dhm.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-dhm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/dhm.c' object='repo/library/libmbedcrypto_a-dhm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-dhm.o `test -f 'repo/library/dhm.c' || echo '$(srcdir)/'`repo/library/dhm.c

repo/library/libmbedcrypto_a-dhm.obj: repo/library/dhm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-dhm.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-dhm.Tpo -c -o repo/library/libmbedcrypto_a-dhm.obj `if test -f 'repo/library/dhm.c'; then $(CYGPATH_W) 'repo/library/dhm.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/dhm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-dhm.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-dhm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/dhm.c' object='repo/library/libmbedcrypto_a-dhm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-dhm.obj `if test -f 'repo/library/dhm.c'; then $(CYGPATH_W) 'repo/library/dhm.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/dhm.c'; fi`

repo/library/libmbedcrypto_a-ecdh.o: repo/library/ecdh.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecdh.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Tpo -c -o repo/library/libmbedcrypto_a-ecdh.o `test -f 'repo/library/ecdh.c' || echo '$(srcdir)/'`repo/library/ecdh.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecdh.c' object='repo/library/libmbedcrypto_a-ecdh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecdh.o `test -f 'repo/library/ecdh.c' || echo '$(srcdir)/'`repo/library/ecdh.c

repo/library/libmbedcrypto_a-ecdh.obj: repo/library/ecdh.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecdh.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Tpo -c -o repo/library/libmbedcrypto_a-ecdh.obj `if test -f 'repo/library/ecdh.c'; then $(CYGPATH_W) 'repo/library/ecdh.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecdh.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecdh.c' object='repo/library/libmbedcrypto_a-ecdh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecdh.obj `if test -f 'repo/library/ecdh.c'; then $(CYGPATH_W) 'repo/library/ecdh.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecdh.c'; fi`

repo/library/libmbedcrypto_a-ecdsa.o: repo/library/ecdsa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecdsa.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Tpo -c -o repo/library/libmbedcrypto_a-ecdsa.o `test -f 'repo/library/ecdsa.c' || echo '$(srcdir)/'`repo/library/ecdsa.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecdsa.c' object='repo/library/libmbedcrypto_a-ecdsa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecdsa.o `test -f 'repo/library/ecdsa.c' || echo '$(srcdir)/'`repo/library/ecdsa.c

repo/library/libmbedcrypto_a-ecdsa.obj: repo/library/ecdsa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecdsa.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Tpo -c -o repo/library/libmbedcrypto_a-ecdsa.obj `if test -f 'repo/library/ecdsa.c'; then $(CYGPATH_W) 'repo/library/ecdsa.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecdsa.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecdsa.c' object='repo/library/libmbedcrypto_a-ecdsa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecdsa.obj `if test -f 'repo/library/ecdsa.c'; then $(CYGPATH_W) 'repo/library/ecdsa.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecdsa.c'; fi`

repo/library/libmbedcrypto_a-ecjpake.o: repo/library/ecjpake.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecjpake.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Tpo -c -o repo/library/libmbedcrypto_a-ecjpake.o `test -f 'repo/library/ecjpake.c' || echo '$(srcdir)/'`repo/library/ecjpake.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecjpake.c' object='repo/library/libmbedcrypto_a-ecjpake.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecjpake.o `test -f 'repo/library/ecjpake.c' || echo '$(srcdir)/'`repo/library/ecjpake.c

repo/library/libmbedcrypto_a-ecjpake.obj: repo/library/ecjpake.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecjpake.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Tpo -c -o repo/library/libmbedcrypto_a-ecjpake.obj `if test -f 'repo/library/ecjpake.c'; then $(CYGPATH_W) 'repo/library/ecjpake.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecjpake.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecjpake.c' object='repo/library/libmbedcrypto_a-ecjpake.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecjpake.obj `if test -f 'repo/library/ecjpake.c'; then $(CYGPATH_W) 'repo/library/ecjpake.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecjpake.c'; fi`

repo/library/libmbedcrypto_a-ecp.o: repo/library/ecp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecp.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Tpo -c -o repo/library/libmbedcrypto_a-ecp.o `test -f 'repo/library/ecp.c' || echo '$(srcdir)/'`repo/library/ecp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecp.c' object='repo/library/libmbedcrypto_a-ecp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecp.o `test -f 'repo/library/ecp.c' || echo '$(srcdir)/'`repo/library/ecp.c

repo/library/libmbedcrypto_a-ecp.obj: repo/library/ecp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecp.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Tpo -c -o repo/library/libmbedcrypto_a-ecp.obj `if test -f 'repo/library/ecp.c'; then $(CYGPATH_W) 'repo/library/ecp.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecp.c' object='repo/library/libmbedcrypto_a-ecp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecp.obj `if test -f 'repo/library/ecp.c'; then $(CYGPATH_W) 'repo/library/ecp.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecp.c'; fi`

repo/library/libmbedcrypto_a-ecp_curves.o: repo/library/ecp_curves.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecp_curves.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Tpo -c -o repo/library/libmbedcrypto_a-ecp_curves.o `test -f 'repo/library/ecp_curves.c' || echo '$(srcdir)/'`repo/library/ecp_curves.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecp_curves.c' object='repo/library/libmbedcrypto_a-ecp_curves.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecp_curves.o `test -f 'repo/library/ecp_curves.c' || echo '$(srcdir)/'`repo/library/ecp_curves.c

repo/library/libmbedcrypto_a-ecp_curves.obj: repo/library/ecp_curves.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ecp_curves.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Tpo -c -o repo/library/libmbedcrypto_a-ecp_curves.obj `if test -f 'repo/library/ecp_curves.c'; then $(CYGPATH_W) 'repo/library/ecp_curves.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecp_curves.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ecp_curves.c' object='repo/library/libmbedcrypto_a-ecp_curves.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ecp_curves.obj `if test -f 'repo/library/ecp_curves.c'; then $(CYGPATH_W) 'repo/library/ecp_curves.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ecp_curves.c'; fi`

repo/library/libmbedcrypto_a-entropy.o: repo/library/entropy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-entropy.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Tpo -c -o repo/library/libmbedcrypto_a-entropy.o `test -f 'repo/library/entropy.c' || echo '$(srcdir)/'`repo/library/entropy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/entropy.c' object='repo/library/libmbedcrypto_a-entropy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-entropy.o `test -f 'repo/library/entropy.c' || echo '$(srcdir)/'`repo/library/entropy.c

repo/library/libmbedcrypto_a-entropy.obj: repo/library/entropy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-entropy.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Tpo -c -o repo/library/libmbedcrypto_a-entropy.obj `if test -f 'repo/library/entropy.c'; then $(CYGPATH_W) 'repo/library/entropy.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/entropy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/entropy.c' object='repo/library/libmbedcrypto_a-entropy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-entropy.obj `if test -f 'repo/library/entropy.c'; then $(CYGPATH_W) 'repo/library/entropy.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/entropy.c'; fi`

repo/library/libmbedcrypto_a-entropy_poll.o: repo/library/entropy_poll.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-entropy_poll.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Tpo -c -o repo/library/libmbedcrypto_a-entropy_poll.o `test -f 'repo/library/entropy_poll.c' || echo '$(srcdir)/'`repo/library/entropy_poll.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/entropy_poll.c' object='repo/library/libmbedcrypto_a-entropy_poll.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-entropy_poll.o `test -f 'repo/library/entropy_poll.c' || echo '$(srcdir)/'`repo/library/entropy_poll.c

repo/library/libmbedcrypto_a-entropy_poll.obj: repo/library/entropy_poll.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-entropy_poll.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Tpo -c -o repo/library/libmbedcrypto_a-entropy_poll.obj `if test -f 'repo/library/entropy_poll.c'; then $(CYGPATH_W) 'repo/library/entropy_poll.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/entropy_poll.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/entropy_poll.c' object='repo/library/libmbedcrypto_a-entropy_poll.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-entropy_poll.obj `if test -f 'repo/library/entropy_poll.c'; then $(CYGPATH_W) 'repo/library/entropy_poll.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/entropy_poll.c'; fi`

repo/library/libmbedcrypto_a-error.o: repo/library/error.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-error.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-error.Tpo -c -o repo/library/libmbedcrypto_a-error.o `test -f 'repo/library/error.c' || echo '$(srcdir)/'`repo/library/error.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-error.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-error.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/error.c' object='repo/library/libmbedcrypto_a-error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-error.o `test -f 'repo/library/error.c' || echo '$(srcdir)/'`repo/library/error.c

repo/library/libmbedcrypto_a-error.obj: repo/library/error.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-error.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-error.Tpo -c -o repo/library/libmbedcrypto_a-error.obj `if test -f 'repo/library/error.c'; then $(CYGPATH_W) 'repo/library/error.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/error.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-error.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-error.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/error.c' object='repo/library/libmbedcrypto_a-error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-error.obj `if test -f 'repo/library/error.c'; then $(CYGPATH_W) 'repo/library/error.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/error.c'; fi`

repo/library/libmbedcrypto_a-gcm.o: repo/library/gcm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-gcm.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-gcm.Tpo -c -o repo/library/libmbedcrypto_a-gcm.o `test -f 'repo/library/gcm.c' || echo '$(srcdir)/'`repo/library/gcm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-gcm.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-gcm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/gcm.c' object='repo/library/libmbedcrypto_a-gcm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-gcm.o `test -f 'repo/library/gcm.c' || echo '$(srcdir)/'`repo/library/gcm.c

repo/library/libmbedcrypto_a-gcm.obj: repo/library/gcm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-gcm.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-gcm.Tpo -c -o repo/library/libmbedcrypto_a-gcm.obj `if test -f 'repo/library/gcm.c'; then $(CYGPATH_W) 'repo/library/gcm.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/gcm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-gcm.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-gcm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/gcm.c' object='repo/library/libmbedcrypto_a-gcm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-gcm.obj `if test -f 'repo/library/gcm.c'; then $(CYGPATH_W) 'repo/library/gcm.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/gcm.c'; fi`

repo/library/libmbedcrypto_a-havege.o: repo/library/havege.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-havege.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-havege.Tpo -c -o repo/library/libmbedcrypto_a-havege.o `test -f 'repo/library/havege.c' || echo '$(srcdir)/'`repo/library/havege.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-havege.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-havege.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/havege.c' object='repo/library/libmbedcrypto_a-havege.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-havege.o `test -f 'repo/library/havege.c' || echo '$(srcdir)/'`repo/library/havege.c

repo/library/libmbedcrypto_a-havege.obj: repo/library/havege.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-havege.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-havege.Tpo -c -o repo/library/libmbedcrypto_a-havege.obj `if test -f 'repo/library/havege.c'; then $(CYGPATH_W) 'repo/library/havege.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/havege.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-havege.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-havege.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/havege.c' object='repo/library/libmbedcrypto_a-havege.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-havege.obj `if test -f 'repo/library/havege.c'; then $(CYGPATH_W) 'repo/library/havege.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/havege.c'; fi`

repo/library/libmbedcrypto_a-hkdf.o: repo/library/hkdf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-hkdf.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-hkdf.Tpo -c -o repo/library/libmbedcrypto_a-hkdf.o `test -f 'repo/library/hkdf.c' || echo '$(srcdir)/'`repo/library/hkdf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-hkdf.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-hkdf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/hkdf.c' object='repo/library/libmbedcrypto_a-hkdf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-hkdf.o `test -f 'repo/library/hkdf.c' || echo '$(srcdir)/'`repo/library/hkdf.c

repo/library/libmbedcrypto_a-hkdf.obj: repo/library/hkdf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-hkdf.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-hkdf.Tpo -c -o repo/library/libmbedcrypto_a-hkdf.obj `if test -f 'repo/library/hkdf.c'; then $(CYGPATH_W) 'repo/library/hkdf.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/hkdf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-hkdf.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-hkdf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/hkdf.c' object='repo/library/libmbedcrypto_a-hkdf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-hkdf.obj `if test -f 'repo/library/hkdf.c'; then $(CYGPATH_W) 'repo/library/hkdf.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/hkdf.c'; fi`

repo/library/libmbedcrypto_a-hmac_drbg.o: repo/library/hmac_drbg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-hmac_drbg.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-hmac_drbg.Tpo -c -o repo/library/libmbedcrypto_a-hmac_drbg.o `test -f 'repo/library/hmac_drbg.c' || echo '$(srcdir)/'`repo/library/hmac_drbg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-hmac_drbg.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-hmac_drbg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/hmac_drbg.c' object='repo/library/libmbedcrypto_a-hmac_drbg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-hmac_drbg.o `test -f 'repo/library/hmac_drbg.c' || echo '$(srcdir)/'`repo/library/hmac_drbg.c

repo/library/libmbedcrypto_a-hmac_drbg.obj: repo/library/hmac_drbg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-hmac_drbg.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-hmac_drbg.Tpo -c -o repo/library/libmbedcrypto_a-hmac_drbg.obj `if test -f 'repo/library/hmac_drbg.c'; then $(CYGPATH_W) 'repo/library/hmac_drbg.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/hmac_drbg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-hmac_drbg.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-hmac_drbg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/hmac_drbg.c' object='repo/library/libmbedcrypto_a-hmac_drbg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-hmac_drbg.obj `if test -f 'repo/library/hmac_drbg.c'; then $(CYGPATH_W) 'repo/library/hmac_drbg.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/hmac_drbg.c'; fi`

repo/library/libmbedcrypto_a-md.o: repo/library/md.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md.Tpo -c -o repo/library/libmbedcrypto_a-md.o `test -f 'repo/library/md.c' || echo '$(srcdir)/'`repo/library/md.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md.c' object='repo/library/libmbedcrypto_a-md.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md.o `test -f 'repo/library/md.c' || echo '$(srcdir)/'`repo/library/md.c

repo/library/libmbedcrypto_a-md.obj: repo/library/md.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md.Tpo -c -o repo/library/libmbedcrypto_a-md.obj `if test -f 'repo/library/md.c'; then $(CYGPATH_W) 'repo/library/md.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md.c' object='repo/library/libmbedcrypto_a-md.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md.obj `if test -f 'repo/library/md.c'; then $(CYGPATH_W) 'repo/library/md.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md.c'; fi`

repo/library/libmbedcrypto_a-md2.o: repo/library/md2.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md2.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md2.Tpo -c -o repo/library/libmbedcrypto_a-md2.o `test -f 'repo/library/md2.c' || echo '$(srcdir)/'`repo/library/md2.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md2.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md2.c' object='repo/library/libmbedcrypto_a-md2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md2.o `test -f 'repo/library/md2.c' || echo '$(srcdir)/'`repo/library/md2.c

repo/library/libmbedcrypto_a-md2.obj: repo/library/md2.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md2.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md2.Tpo -c -o repo/library/libmbedcrypto_a-md2.obj `if test -f 'repo/library/md2.c'; then $(CYGPATH_W) 'repo/library/md2.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md2.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md2.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md2.c' object='repo/library/libmbedcrypto_a-md2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md2.obj `if test -f 'repo/library/md2.c'; then $(CYGPATH_W) 'repo/library/md2.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md2.c'; fi`

repo/library/libmbedcrypto_a-md4.o: repo/library/md4.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md4.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md4.Tpo -c -o repo/library/libmbedcrypto_a-md4.o `test -f 'repo/library/md4.c' || echo '$(srcdir)/'`repo/library/md4.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md4.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md4.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md4.c' object='repo/library/libmbedcrypto_a-md4.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md4.o `test -f 'repo/library/md4.c' || echo '$(srcdir)/'`repo/library/md4.c

repo/library/libmbedcrypto_a-md4.obj: repo/library/md4.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md4.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md4.Tpo -c -o repo/library/libmbedcrypto_a-md4.obj `if test -f 'repo/library/md4.c'; then $(CYGPATH_W) 'repo/library/md4.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md4.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md4.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md4.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md4.c' object='repo/library/libmbedcrypto_a-md4.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md4.obj `if test -f 'repo/library/md4.c'; then $(CYGPATH_W) 'repo/library/md4.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md4.c'; fi`

repo/library/libmbedcrypto_a-md5.o: repo/library/md5.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md5.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md5.Tpo -c -o repo/library/libmbedcrypto_a-md5.o `test -f 'repo/library/md5.c' || echo '$(srcdir)/'`repo/library/md5.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md5.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md5.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md5.c' object='repo/library/libmbedcrypto_a-md5.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md5.o `test -f 'repo/library/md5.c' || echo '$(srcdir)/'`repo/library/md5.c

repo/library/libmbedcrypto_a-md5.obj: repo/library/md5.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-md5.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-md5.Tpo -c -o repo/library/libmbedcrypto_a-md5.obj `if test -f 'repo/library/md5.c'; then $(CYGPATH_W) 'repo/library/md5.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md5.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-md5.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-md5.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/md5.c' object='repo/library/libmbedcrypto_a-md5.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-md5.obj `if test -f 'repo/library/md5.c'; then $(CYGPATH_W) 'repo/library/md5.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/md5.c'; fi`

repo/library/libmbedcrypto_a-mps_reader.o: repo/library/mps_reader.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-mps_reader.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-mps_reader.Tpo -c -o repo/library/libmbedcrypto_a-mps_reader.o `test -f 'repo/library/mps_reader.c' || echo '$(srcdir)/'`repo/library/mps_reader.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-mps_reader.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-mps_reader.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/mps_reader.c' object='repo/library/libmbedcrypto_a-mps_reader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-mps_reader.o `test -f 'repo/library/mps_reader.c' || echo '$(srcdir)/'`repo/library/mps_reader.c

repo/library/libmbedcrypto_a-mps_reader.obj: repo/library/mps_reader.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-mps_reader.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-mps_reader.Tpo -c -o repo/library/libmbedcrypto_a-mps_reader.obj `if test -f 'repo/library/mps_reader.c'; then $(CYGPATH_W) 'repo/library/mps_reader.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/mps_reader.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-mps_reader.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-mps_reader.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/mps_reader.c' object='repo/library/libmbedcrypto_a-mps_reader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-mps_reader.obj `if test -f 'repo/library/mps_reader.c'; then $(CYGPATH_W) 'repo/library/mps_reader.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/mps_reader.c'; fi`

repo/library/libmbedcrypto_a-mps_trace.o: repo/library/mps_trace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-mps_trace.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-mps_trace.Tpo -c -o repo/library/libmbedcrypto_a-mps_trace.o `test -f 'repo/library/mps_trace.c' || echo '$(srcdir)/'`repo/library/mps_trace.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-mps_trace.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-mps_trace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/mps_trace.c' object='repo/library/libmbedcrypto_a-mps_trace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-mps_trace.o `test -f 'repo/library/mps_trace.c' || echo '$(srcdir)/'`repo/library/mps_trace.c

repo/library/libmbedcrypto_a-mps_trace.obj: repo/library/mps_trace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-mps_trace.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-mps_trace.Tpo -c -o repo/library/libmbedcrypto_a-mps_trace.obj `if test -f 'repo/library/mps_trace.c'; then $(CYGPATH_W) 'repo/library/mps_trace.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/mps_trace.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-mps_trace.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-mps_trace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/mps_trace.c' object='repo/library/libmbedcrypto_a-mps_trace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-mps_trace.obj `if test -f 'repo/library/mps_trace.c'; then $(CYGPATH_W) 'repo/library/mps_trace.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/mps_trace.c'; fi`

repo/library/libmbedcrypto_a-memory_buffer_alloc.o: repo/library/memory_buffer_alloc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-memory_buffer_alloc.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Tpo -c -o repo/library/libmbedcrypto_a-memory_buffer_alloc.o `test -f 'repo/library/memory_buffer_alloc.c' || echo '$(srcdir)/'`repo/library/memory_buffer_alloc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/memory_buffer_alloc.c' object='repo/library/libmbedcrypto_a-memory_buffer_alloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-memory_buffer_alloc.o `test -f 'repo/library/memory_buffer_alloc.c' || echo '$(srcdir)/'`repo/library/memory_buffer_alloc.c

repo/library/libmbedcrypto_a-memory_buffer_alloc.obj: repo/library/memory_buffer_alloc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-memory_buffer_alloc.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Tpo -c -o repo/library/libmbedcrypto_a-memory_buffer_alloc.obj `if test -f 'repo/library/memory_buffer_alloc.c'; then $(CYGPATH_W) 'repo/library/memory_buffer_alloc.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/memory_buffer_alloc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/memory_buffer_alloc.c' object='repo/library/libmbedcrypto_a-memory_buffer_alloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-memory_buffer_alloc.obj `if test -f 'repo/library/memory_buffer_alloc.c'; then $(CYGPATH_W) 'repo/library/memory_buffer_alloc.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/memory_buffer_alloc.c'; fi`

repo/library/libmbedcrypto_a-net_sockets.o: repo/library/net_sockets.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-net_sockets.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-net_sockets.Tpo -c -o repo/library/libmbedcrypto_a-net_sockets.o `test -f 'repo/library/net_sockets.c' || echo '$(srcdir)/'`repo/library/net_sockets.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-net_sockets.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-net_sockets.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/net_sockets.c' object='repo/library/libmbedcrypto_a-net_sockets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-net_sockets.o `test -f 'repo/library/net_sockets.c' || echo '$(srcdir)/'`repo/library/net_sockets.c

repo/library/libmbedcrypto_a-net_sockets.obj: repo/library/net_sockets.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-net_sockets.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-net_sockets.Tpo -c -o repo/library/libmbedcrypto_a-net_sockets.obj `if test -f 'repo/library/net_sockets.c'; then $(CYGPATH_W) 'repo/library/net_sockets.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/net_sockets.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-net_sockets.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-net_sockets.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/net_sockets.c' object='repo/library/libmbedcrypto_a-net_sockets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-net_sockets.obj `if test -f 'repo/library/net_sockets.c'; then $(CYGPATH_W) 'repo/library/net_sockets.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/net_sockets.c'; fi`

repo/library/libmbedcrypto_a-nist_kw.o: repo/library/nist_kw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-nist_kw.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-nist_kw.Tpo -c -o repo/library/libmbedcrypto_a-nist_kw.o `test -f 'repo/library/nist_kw.c' || echo '$(srcdir)/'`repo/library/nist_kw.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-nist_kw.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-nist_kw.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/nist_kw.c' object='repo/library/libmbedcrypto_a-nist_kw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-nist_kw.o `test -f 'repo/library/nist_kw.c' || echo '$(srcdir)/'`repo/library/nist_kw.c

repo/library/libmbedcrypto_a-nist_kw.obj: repo/library/nist_kw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-nist_kw.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-nist_kw.Tpo -c -o repo/library/libmbedcrypto_a-nist_kw.obj `if test -f 'repo/library/nist_kw.c'; then $(CYGPATH_W) 'repo/library/nist_kw.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/nist_kw.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-nist_kw.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-nist_kw.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/nist_kw.c' object='repo/library/libmbedcrypto_a-nist_kw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-nist_kw.obj `if test -f 'repo/library/nist_kw.c'; then $(CYGPATH_W) 'repo/library/nist_kw.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/nist_kw.c'; fi`

repo/library/libmbedcrypto_a-oid.o: repo/library/oid.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-oid.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Tpo -c -o repo/library/libmbedcrypto_a-oid.o `test -f 'repo/library/oid.c' || echo '$(srcdir)/'`repo/library/oid.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/oid.c' object='repo/library/libmbedcrypto_a-oid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-oid.o `test -f 'repo/library/oid.c' || echo '$(srcdir)/'`repo/library/oid.c

repo/library/libmbedcrypto_a-oid.obj: repo/library/oid.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-oid.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Tpo -c -o repo/library/libmbedcrypto_a-oid.obj `if test -f 'repo/library/oid.c'; then $(CYGPATH_W) 'repo/library/oid.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/oid.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/oid.c' object='repo/library/libmbedcrypto_a-oid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-oid.obj `if test -f 'repo/library/oid.c'; then $(CYGPATH_W) 'repo/library/oid.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/oid.c'; fi`

repo/library/libmbedcrypto_a-padlock.o: repo/library/padlock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-padlock.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-padlock.Tpo -c -o repo/library/libmbedcrypto_a-padlock.o `test -f 'repo/library/padlock.c' || echo '$(srcdir)/'`repo/library/padlock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-padlock.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-padlock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/padlock.c' object='repo/library/libmbedcrypto_a-padlock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-padlock.o `test -f 'repo/library/padlock.c' || echo '$(srcdir)/'`repo/library/padlock.c

repo/library/libmbedcrypto_a-padlock.obj: repo/library/padlock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-padlock.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-padlock.Tpo -c -o repo/library/libmbedcrypto_a-padlock.obj `if test -f 'repo/library/padlock.c'; then $(CYGPATH_W) 'repo/library/padlock.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/padlock.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-padlock.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-padlock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/padlock.c' object='repo/library/libmbedcrypto_a-padlock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-padlock.obj `if test -f 'repo/library/padlock.c'; then $(CYGPATH_W) 'repo/library/padlock.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/padlock.c'; fi`

repo/library/libmbedcrypto_a-pem.o: repo/library/pem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pem.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Tpo -c -o repo/library/libmbedcrypto_a-pem.o `test -f 'repo/library/pem.c' || echo '$(srcdir)/'`repo/library/pem.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pem.c' object='repo/library/libmbedcrypto_a-pem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pem.o `test -f 'repo/library/pem.c' || echo '$(srcdir)/'`repo/library/pem.c

repo/library/libmbedcrypto_a-pem.obj: repo/library/pem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pem.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Tpo -c -o repo/library/libmbedcrypto_a-pem.obj `if test -f 'repo/library/pem.c'; then $(CYGPATH_W) 'repo/library/pem.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pem.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pem.c' object='repo/library/libmbedcrypto_a-pem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pem.obj `if test -f 'repo/library/pem.c'; then $(CYGPATH_W) 'repo/library/pem.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pem.c'; fi`

repo/library/libmbedcrypto_a-pk.o: repo/library/pk.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pk.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Tpo -c -o repo/library/libmbedcrypto_a-pk.o `test -f 'repo/library/pk.c' || echo '$(srcdir)/'`repo/library/pk.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pk.c' object='repo/library/libmbedcrypto_a-pk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pk.o `test -f 'repo/library/pk.c' || echo '$(srcdir)/'`repo/library/pk.c

repo/library/libmbedcrypto_a-pk.obj: repo/library/pk.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pk.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Tpo -c -o repo/library/libmbedcrypto_a-pk.obj `if test -f 'repo/library/pk.c'; then $(CYGPATH_W) 'repo/library/pk.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pk.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pk.c' object='repo/library/libmbedcrypto_a-pk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pk.obj `if test -f 'repo/library/pk.c'; then $(CYGPATH_W) 'repo/library/pk.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pk.c'; fi`

repo/library/libmbedcrypto_a-pk_wrap.o: repo/library/pk_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pk_wrap.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Tpo -c -o repo/library/libmbedcrypto_a-pk_wrap.o `test -f 'repo/library/pk_wrap.c' || echo '$(srcdir)/'`repo/library/pk_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pk_wrap.c' object='repo/library/libmbedcrypto_a-pk_wrap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pk_wrap.o `test -f 'repo/library/pk_wrap.c' || echo '$(srcdir)/'`repo/library/pk_wrap.c

repo/library/libmbedcrypto_a-pk_wrap.obj: repo/library/pk_wrap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pk_wrap.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Tpo -c -o repo/library/libmbedcrypto_a-pk_wrap.obj `if test -f 'repo/library/pk_wrap.c'; then $(CYGPATH_W) 'repo/library/pk_wrap.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pk_wrap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pk_wrap.c' object='repo/library/libmbedcrypto_a-pk_wrap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pk_wrap.obj `if test -f 'repo/library/pk_wrap.c'; then $(CYGPATH_W) 'repo/library/pk_wrap.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pk_wrap.c'; fi`

repo/library/libmbedcrypto_a-pkcs11.o: repo/library/pkcs11.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkcs11.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs11.Tpo -c -o repo/library/libmbedcrypto_a-pkcs11.o `test -f 'repo/library/pkcs11.c' || echo '$(srcdir)/'`repo/library/pkcs11.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs11.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs11.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkcs11.c' object='repo/library/libmbedcrypto_a-pkcs11.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkcs11.o `test -f 'repo/library/pkcs11.c' || echo '$(srcdir)/'`repo/library/pkcs11.c

repo/library/libmbedcrypto_a-pkcs11.obj: repo/library/pkcs11.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkcs11.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs11.Tpo -c -o repo/library/libmbedcrypto_a-pkcs11.obj `if test -f 'repo/library/pkcs11.c'; then $(CYGPATH_W) 'repo/library/pkcs11.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkcs11.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs11.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs11.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkcs11.c' object='repo/library/libmbedcrypto_a-pkcs11.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkcs11.obj `if test -f 'repo/library/pkcs11.c'; then $(CYGPATH_W) 'repo/library/pkcs11.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkcs11.c'; fi`

repo/library/libmbedcrypto_a-pkcs12.o: repo/library/pkcs12.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkcs12.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs12.Tpo -c -o repo/library/libmbedcrypto_a-pkcs12.o `test -f 'repo/library/pkcs12.c' || echo '$(srcdir)/'`repo/library/pkcs12.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs12.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs12.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkcs12.c' object='repo/library/libmbedcrypto_a-pkcs12.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkcs12.o `test -f 'repo/library/pkcs12.c' || echo '$(srcdir)/'`repo/library/pkcs12.c

repo/library/libmbedcrypto_a-pkcs12.obj: repo/library/pkcs12.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkcs12.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs12.Tpo -c -o repo/library/libmbedcrypto_a-pkcs12.obj `if test -f 'repo/library/pkcs12.c'; then $(CYGPATH_W) 'repo/library/pkcs12.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkcs12.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs12.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs12.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkcs12.c' object='repo/library/libmbedcrypto_a-pkcs12.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkcs12.obj `if test -f 'repo/library/pkcs12.c'; then $(CYGPATH_W) 'repo/library/pkcs12.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkcs12.c'; fi`

repo/library/libmbedcrypto_a-pkcs5.o: repo/library/pkcs5.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkcs5.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs5.Tpo -c -o repo/library/libmbedcrypto_a-pkcs5.o `test -f 'repo/library/pkcs5.c' || echo '$(srcdir)/'`repo/library/pkcs5.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs5.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs5.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkcs5.c' object='repo/library/libmbedcrypto_a-pkcs5.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkcs5.o `test -f 'repo/library/pkcs5.c' || echo '$(srcdir)/'`repo/library/pkcs5.c

repo/library/libmbedcrypto_a-pkcs5.obj: repo/library/pkcs5.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkcs5.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs5.Tpo -c -o repo/library/libmbedcrypto_a-pkcs5.obj `if test -f 'repo/library/pkcs5.c'; then $(CYGPATH_W) 'repo/library/pkcs5.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkcs5.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs5.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs5.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkcs5.c' object='repo/library/libmbedcrypto_a-pkcs5.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkcs5.obj `if test -f 'repo/library/pkcs5.c'; then $(CYGPATH_W) 'repo/library/pkcs5.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkcs5.c'; fi`

repo/library/libmbedcrypto_a-pkparse.o: repo/library/pkparse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkparse.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Tpo -c -o repo/library/libmbedcrypto_a-pkparse.o `test -f 'repo/library/pkparse.c' || echo '$(srcdir)/'`repo/library/pkparse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkparse.c' object='repo/library/libmbedcrypto_a-pkparse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkparse.o `test -f 'repo/library/pkparse.c' || echo '$(srcdir)/'`repo/library/pkparse.c

repo/library/libmbedcrypto_a-pkparse.obj: repo/library/pkparse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkparse.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Tpo -c -o repo/library/libmbedcrypto_a-pkparse.obj `if test -f 'repo/library/pkparse.c'; then $(CYGPATH_W) 'repo/library/pkparse.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkparse.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkparse.c' object='repo/library/libmbedcrypto_a-pkparse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkparse.obj `if test -f 'repo/library/pkparse.c'; then $(CYGPATH_W) 'repo/library/pkparse.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkparse.c'; fi`

repo/library/libmbedcrypto_a-pkwrite.o: repo/library/pkwrite.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkwrite.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkwrite.Tpo -c -o repo/library/libmbedcrypto_a-pkwrite.o `test -f 'repo/library/pkwrite.c' || echo '$(srcdir)/'`repo/library/pkwrite.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkwrite.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkwrite.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkwrite.c' object='repo/library/libmbedcrypto_a-pkwrite.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkwrite.o `test -f 'repo/library/pkwrite.c' || echo '$(srcdir)/'`repo/library/pkwrite.c

repo/library/libmbedcrypto_a-pkwrite.obj: repo/library/pkwrite.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-pkwrite.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-pkwrite.Tpo -c -o repo/library/libmbedcrypto_a-pkwrite.obj `if test -f 'repo/library/pkwrite.c'; then $(CYGPATH_W) 'repo/library/pkwrite.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkwrite.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-pkwrite.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-pkwrite.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/pkwrite.c' object='repo/library/libmbedcrypto_a-pkwrite.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-pkwrite.obj `if test -f 'repo/library/pkwrite.c'; then $(CYGPATH_W) 'repo/library/pkwrite.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/pkwrite.c'; fi`

repo/library/libmbedcrypto_a-platform.o: repo/library/platform.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-platform.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Tpo -c -o repo/library/libmbedcrypto_a-platform.o `test -f 'repo/library/platform.c' || echo '$(srcdir)/'`repo/library/platform.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/platform.c' object='repo/library/libmbedcrypto_a-platform.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-platform.o `test -f 'repo/library/platform.c' || echo '$(srcdir)/'`repo/library/platform.c

repo/library/libmbedcrypto_a-platform.obj: repo/library/platform.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-platform.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Tpo -c -o repo/library/libmbedcrypto_a-platform.obj `if test -f 'repo/library/platform.c'; then $(CYGPATH_W) 'repo/library/platform.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/platform.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/platform.c' object='repo/library/libmbedcrypto_a-platform.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-platform.obj `if test -f 'repo/library/platform.c'; then $(CYGPATH_W) 'repo/library/platform.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/platform.c'; fi`

repo/library/libmbedcrypto_a-platform_util.o: repo/library/platform_util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-platform_util.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Tpo -c -o repo/library/libmbedcrypto_a-platform_util.o `test -f 'repo/library/platform_util.c' || echo '$(srcdir)/'`repo/library/platform_util.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/platform_util.c' object='repo/library/libmbedcrypto_a-platform_util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-platform_util.o `test -f 'repo/library/platform_util.c' || echo '$(srcdir)/'`repo/library/platform_util.c

repo/library/libmbedcrypto_a-platform_util.obj: repo/library/platform_util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-platform_util.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Tpo -c -o repo/library/libmbedcrypto_a-platform_util.obj `if test -f 'repo/library/platform_util.c'; then $(CYGPATH_W) 'repo/library/platform_util.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/platform_util.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/platform_util.c' object='repo/library/libmbedcrypto_a-platform_util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-platform_util.obj `if test -f 'repo/library/platform_util.c'; then $(CYGPATH_W) 'repo/library/platform_util.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/platform_util.c'; fi`

repo/library/libmbedcrypto_a-poly1305.o: repo/library/poly1305.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-poly1305.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-poly1305.Tpo -c -o repo/library/libmbedcrypto_a-poly1305.o `test -f 'repo/library/poly1305.c' || echo '$(srcdir)/'`repo/library/poly1305.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-poly1305.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-poly1305.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/poly1305.c' object='repo/library/libmbedcrypto_a-poly1305.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-poly1305.o `test -f 'repo/library/poly1305.c' || echo '$(srcdir)/'`repo/library/poly1305.c

repo/library/libmbedcrypto_a-poly1305.obj: repo/library/poly1305.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-poly1305.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-poly1305.Tpo -c -o repo/library/libmbedcrypto_a-poly1305.obj `if test -f 'repo/library/poly1305.c'; then $(CYGPATH_W) 'repo/library/poly1305.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/poly1305.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-poly1305.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-poly1305.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/poly1305.c' object='repo/library/libmbedcrypto_a-poly1305.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-poly1305.obj `if test -f 'repo/library/poly1305.c'; then $(CYGPATH_W) 'repo/library/poly1305.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/poly1305.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto.o: repo/library/psa_crypto.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto.o `test -f 'repo/library/psa_crypto.c' || echo '$(srcdir)/'`repo/library/psa_crypto.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto.c' object='repo/library/libmbedcrypto_a-psa_crypto.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto.o `test -f 'repo/library/psa_crypto.c' || echo '$(srcdir)/'`repo/library/psa_crypto.c

repo/library/libmbedcrypto_a-psa_crypto.obj: repo/library/psa_crypto.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto.obj `if test -f 'repo/library/psa_crypto.c'; then $(CYGPATH_W) 'repo/library/psa_crypto.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto.c' object='repo/library/libmbedcrypto_a-psa_crypto.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto.obj `if test -f 'repo/library/psa_crypto.c'; then $(CYGPATH_W) 'repo/library/psa_crypto.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_aead.o: repo/library/psa_crypto_aead.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_aead.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_aead.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_aead.o `test -f 'repo/library/psa_crypto_aead.c' || echo '$(srcdir)/'`repo/library/psa_crypto_aead.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_aead.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_aead.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_aead.c' object='repo/library/libmbedcrypto_a-psa_crypto_aead.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_aead.o `test -f 'repo/library/psa_crypto_aead.c' || echo '$(srcdir)/'`repo/library/psa_crypto_aead.c

repo/library/libmbedcrypto_a-psa_crypto_aead.obj: repo/library/psa_crypto_aead.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_aead.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_aead.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_aead.obj `if test -f 'repo/library/psa_crypto_aead.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_aead.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_aead.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_aead.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_aead.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_aead.c' object='repo/library/libmbedcrypto_a-psa_crypto_aead.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_aead.obj `if test -f 'repo/library/psa_crypto_aead.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_aead.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_aead.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_cipher.o: repo/library/psa_crypto_cipher.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_cipher.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_cipher.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_cipher.o `test -f 'repo/library/psa_crypto_cipher.c' || echo '$(srcdir)/'`repo/library/psa_crypto_cipher.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_cipher.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_cipher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_cipher.c' object='repo/library/libmbedcrypto_a-psa_crypto_cipher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_cipher.o `test -f 'repo/library/psa_crypto_cipher.c' || echo '$(srcdir)/'`repo/library/psa_crypto_cipher.c

repo/library/libmbedcrypto_a-psa_crypto_cipher.obj: repo/library/psa_crypto_cipher.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_cipher.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_cipher.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_cipher.obj `if test -f 'repo/library/psa_crypto_cipher.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_cipher.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_cipher.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_cipher.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_cipher.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_cipher.c' object='repo/library/libmbedcrypto_a-psa_crypto_cipher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_cipher.obj `if test -f 'repo/library/psa_crypto_cipher.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_cipher.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_cipher.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_client.o: repo/library/psa_crypto_client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_client.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_client.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_client.o `test -f 'repo/library/psa_crypto_client.c' || echo '$(srcdir)/'`repo/library/psa_crypto_client.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_client.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_client.c' object='repo/library/libmbedcrypto_a-psa_crypto_client.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_client.o `test -f 'repo/library/psa_crypto_client.c' || echo '$(srcdir)/'`repo/library/psa_crypto_client.c

repo/library/libmbedcrypto_a-psa_crypto_client.obj: repo/library/psa_crypto_client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_client.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_client.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_client.obj `if test -f 'repo/library/psa_crypto_client.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_client.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_client.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_client.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_client.c' object='repo/library/libmbedcrypto_a-psa_crypto_client.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_client.obj `if test -f 'repo/library/psa_crypto_client.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_client.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_client.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.o: repo/library/psa_crypto_driver_wrappers.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_driver_wrappers.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.o `test -f 'repo/library/psa_crypto_driver_wrappers.c' || echo '$(srcdir)/'`repo/library/psa_crypto_driver_wrappers.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_driver_wrappers.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_driver_wrappers.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_driver_wrappers.c' object='repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.o `test -f 'repo/library/psa_crypto_driver_wrappers.c' || echo '$(srcdir)/'`repo/library/psa_crypto_driver_wrappers.c

repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.obj: repo/library/psa_crypto_driver_wrappers.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_driver_wrappers.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.obj `if test -f 'repo/library/psa_crypto_driver_wrappers.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_driver_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_driver_wrappers.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_driver_wrappers.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_driver_wrappers.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_driver_wrappers.c' object='repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_driver_wrappers.obj `if test -f 'repo/library/psa_crypto_driver_wrappers.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_driver_wrappers.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_driver_wrappers.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_ecp.o: repo/library/psa_crypto_ecp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_ecp.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_ecp.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_ecp.o `test -f 'repo/library/psa_crypto_ecp.c' || echo '$(srcdir)/'`repo/library/psa_crypto_ecp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_ecp.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_ecp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_ecp.c' object='repo/library/libmbedcrypto_a-psa_crypto_ecp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_ecp.o `test -f 'repo/library/psa_crypto_ecp.c' || echo '$(srcdir)/'`repo/library/psa_crypto_ecp.c

repo/library/libmbedcrypto_a-psa_crypto_ecp.obj: repo/library/psa_crypto_ecp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_ecp.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_ecp.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_ecp.obj `if test -f 'repo/library/psa_crypto_ecp.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_ecp.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_ecp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_ecp.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_ecp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_ecp.c' object='repo/library/libmbedcrypto_a-psa_crypto_ecp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_ecp.obj `if test -f 'repo/library/psa_crypto_ecp.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_ecp.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_ecp.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_hash.o: repo/library/psa_crypto_hash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_hash.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_hash.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_hash.o `test -f 'repo/library/psa_crypto_hash.c' || echo '$(srcdir)/'`repo/library/psa_crypto_hash.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_hash.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_hash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_hash.c' object='repo/library/libmbedcrypto_a-psa_crypto_hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_hash.o `test -f 'repo/library/psa_crypto_hash.c' || echo '$(srcdir)/'`repo/library/psa_crypto_hash.c

repo/library/libmbedcrypto_a-psa_crypto_hash.obj: repo/library/psa_crypto_hash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_hash.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_hash.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_hash.obj `if test -f 'repo/library/psa_crypto_hash.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_hash.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_hash.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_hash.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_hash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_hash.c' object='repo/library/libmbedcrypto_a-psa_crypto_hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_hash.obj `if test -f 'repo/library/psa_crypto_hash.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_hash.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_hash.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_mac.o: repo/library/psa_crypto_mac.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_mac.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_mac.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_mac.o `test -f 'repo/library/psa_crypto_mac.c' || echo '$(srcdir)/'`repo/library/psa_crypto_mac.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_mac.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_mac.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_mac.c' object='repo/library/libmbedcrypto_a-psa_crypto_mac.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_mac.o `test -f 'repo/library/psa_crypto_mac.c' || echo '$(srcdir)/'`repo/library/psa_crypto_mac.c

repo/library/libmbedcrypto_a-psa_crypto_mac.obj: repo/library/psa_crypto_mac.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_mac.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_mac.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_mac.obj `if test -f 'repo/library/psa_crypto_mac.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_mac.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_mac.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_mac.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_mac.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_mac.c' object='repo/library/libmbedcrypto_a-psa_crypto_mac.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_mac.obj `if test -f 'repo/library/psa_crypto_mac.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_mac.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_mac.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_rsa.o: repo/library/psa_crypto_rsa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_rsa.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_rsa.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_rsa.o `test -f 'repo/library/psa_crypto_rsa.c' || echo '$(srcdir)/'`repo/library/psa_crypto_rsa.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_rsa.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_rsa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_rsa.c' object='repo/library/libmbedcrypto_a-psa_crypto_rsa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_rsa.o `test -f 'repo/library/psa_crypto_rsa.c' || echo '$(srcdir)/'`repo/library/psa_crypto_rsa.c

repo/library/libmbedcrypto_a-psa_crypto_rsa.obj: repo/library/psa_crypto_rsa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_rsa.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_rsa.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_rsa.obj `if test -f 'repo/library/psa_crypto_rsa.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_rsa.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_rsa.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_rsa.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_rsa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_rsa.c' object='repo/library/libmbedcrypto_a-psa_crypto_rsa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_rsa.obj `if test -f 'repo/library/psa_crypto_rsa.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_rsa.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_rsa.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_se.o: repo/library/psa_crypto_se.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_se.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_se.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_se.o `test -f 'repo/library/psa_crypto_se.c' || echo '$(srcdir)/'`repo/library/psa_crypto_se.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_se.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_se.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_se.c' object='repo/library/libmbedcrypto_a-psa_crypto_se.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_se.o `test -f 'repo/library/psa_crypto_se.c' || echo '$(srcdir)/'`repo/library/psa_crypto_se.c

repo/library/libmbedcrypto_a-psa_crypto_se.obj: repo/library/psa_crypto_se.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_se.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_se.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_se.obj `if test -f 'repo/library/psa_crypto_se.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_se.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_se.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_se.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_se.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_se.c' object='repo/library/libmbedcrypto_a-psa_crypto_se.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_se.obj `if test -f 'repo/library/psa_crypto_se.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_se.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_se.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_slot_management.o: repo/library/psa_crypto_slot_management.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_slot_management.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_slot_management.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_slot_management.o `test -f 'repo/library/psa_crypto_slot_management.c' || echo '$(srcdir)/'`repo/library/psa_crypto_slot_management.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_slot_management.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_slot_management.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_slot_management.c' object='repo/library/libmbedcrypto_a-psa_crypto_slot_management.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_slot_management.o `test -f 'repo/library/psa_crypto_slot_management.c' || echo '$(srcdir)/'`repo/library/psa_crypto_slot_management.c

repo/library/libmbedcrypto_a-psa_crypto_slot_management.obj: repo/library/psa_crypto_slot_management.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_slot_management.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_slot_management.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_slot_management.obj `if test -f 'repo/library/psa_crypto_slot_management.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_slot_management.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_slot_management.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_slot_management.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_slot_management.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_slot_management.c' object='repo/library/libmbedcrypto_a-psa_crypto_slot_management.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_slot_management.obj `if test -f 'repo/library/psa_crypto_slot_management.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_slot_management.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_slot_management.c'; fi`

repo/library/libmbedcrypto_a-psa_crypto_storage.o: repo/library/psa_crypto_storage.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_storage.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_storage.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_storage.o `test -f 'repo/library/psa_crypto_storage.c' || echo '$(srcdir)/'`repo/library/psa_crypto_storage.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_storage.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_storage.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_storage.c' object='repo/library/libmbedcrypto_a-psa_crypto_storage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_storage.o `test -f 'repo/library/psa_crypto_storage.c' || echo '$(srcdir)/'`repo/library/psa_crypto_storage.c

repo/library/libmbedcrypto_a-psa_crypto_storage.obj: repo/library/psa_crypto_storage.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_crypto_storage.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_storage.Tpo -c -o repo/library/libmbedcrypto_a-psa_crypto_storage.obj `if test -f 'repo/library/psa_crypto_storage.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_storage.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_storage.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_storage.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_storage.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_crypto_storage.c' object='repo/library/libmbedcrypto_a-psa_crypto_storage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_crypto_storage.obj `if test -f 'repo/library/psa_crypto_storage.c'; then $(CYGPATH_W) 'repo/library/psa_crypto_storage.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_crypto_storage.c'; fi`

repo/library/libmbedcrypto_a-psa_its_file.o: repo/library/psa_its_file.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_its_file.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_its_file.Tpo -c -o repo/library/libmbedcrypto_a-psa_its_file.o `test -f 'repo/library/psa_its_file.c' || echo '$(srcdir)/'`repo/library/psa_its_file.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_its_file.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_its_file.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_its_file.c' object='repo/library/libmbedcrypto_a-psa_its_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_its_file.o `test -f 'repo/library/psa_its_file.c' || echo '$(srcdir)/'`repo/library/psa_its_file.c

repo/library/libmbedcrypto_a-psa_its_file.obj: repo/library/psa_its_file.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-psa_its_file.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-psa_its_file.Tpo -c -o repo/library/libmbedcrypto_a-psa_its_file.obj `if test -f 'repo/library/psa_its_file.c'; then $(CYGPATH_W) 'repo/library/psa_its_file.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_its_file.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-psa_its_file.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-psa_its_file.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/psa_its_file.c' object='repo/library/libmbedcrypto_a-psa_its_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-psa_its_file.obj `if test -f 'repo/library/psa_its_file.c'; then $(CYGPATH_W) 'repo/library/psa_its_file.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/psa_its_file.c'; fi`

repo/library/libmbedcrypto_a-ripemd160.o: repo/library/ripemd160.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ripemd160.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ripemd160.Tpo -c -o repo/library/libmbedcrypto_a-ripemd160.o `test -f 'repo/library/ripemd160.c' || echo '$(srcdir)/'`repo/library/ripemd160.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ripemd160.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ripemd160.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ripemd160.c' object='repo/library/libmbedcrypto_a-ripemd160.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ripemd160.o `test -f 'repo/library/ripemd160.c' || echo '$(srcdir)/'`repo/library/ripemd160.c

repo/library/libmbedcrypto_a-ripemd160.obj: repo/library/ripemd160.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ripemd160.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ripemd160.Tpo -c -o repo/library/libmbedcrypto_a-ripemd160.obj `if test -f 'repo/library/ripemd160.c'; then $(CYGPATH_W) 'repo/library/ripemd160.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ripemd160.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ripemd160.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ripemd160.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ripemd160.c' object='repo/library/libmbedcrypto_a-ripemd160.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ripemd160.obj `if test -f 'repo/library/ripemd160.c'; then $(CYGPATH_W) 'repo/library/ripemd160.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ripemd160.c'; fi`

repo/library/libmbedcrypto_a-rsa.o: repo/library/rsa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-rsa.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-rsa.Tpo -c -o repo/library/libmbedcrypto_a-rsa.o `test -f 'repo/library/rsa.c' || echo '$(srcdir)/'`repo/library/rsa.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-rsa.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-rsa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/rsa.c' object='repo/library/libmbedcrypto_a-rsa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-rsa.o `test -f 'repo/library/rsa.c' || echo '$(srcdir)/'`repo/library/rsa.c

repo/library/libmbedcrypto_a-rsa.obj: repo/library/rsa.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-rsa.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-rsa.Tpo -c -o repo/library/libmbedcrypto_a-rsa.obj `if test -f 'repo/library/rsa.c'; then $(CYGPATH_W) 'repo/library/rsa.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/rsa.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-rsa.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-rsa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/rsa.c' object='repo/library/libmbedcrypto_a-rsa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-rsa.obj `if test -f 'repo/library/rsa.c'; then $(CYGPATH_W) 'repo/library/rsa.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/rsa.c'; fi`

repo/library/libmbedcrypto_a-rsa_internal.o: repo/library/rsa_internal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-rsa_internal.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-rsa_internal.Tpo -c -o repo/library/libmbedcrypto_a-rsa_internal.o `test -f 'repo/library/rsa_internal.c' || echo '$(srcdir)/'`repo/library/rsa_internal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-rsa_internal.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-rsa_internal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/rsa_internal.c' object='repo/library/libmbedcrypto_a-rsa_internal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-rsa_internal.o `test -f 'repo/library/rsa_internal.c' || echo '$(srcdir)/'`repo/library/rsa_internal.c

repo/library/libmbedcrypto_a-rsa_internal.obj: repo/library/rsa_internal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-rsa_internal.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-rsa_internal.Tpo -c -o repo/library/libmbedcrypto_a-rsa_internal.obj `if test -f 'repo/library/rsa_internal.c'; then $(CYGPATH_W) 'repo/library/rsa_internal.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/rsa_internal.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-rsa_internal.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-rsa_internal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/rsa_internal.c' object='repo/library/libmbedcrypto_a-rsa_internal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-rsa_internal.obj `if test -f 'repo/library/rsa_internal.c'; then $(CYGPATH_W) 'repo/library/rsa_internal.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/rsa_internal.c'; fi`

repo/library/libmbedcrypto_a-sha1.o: repo/library/sha1.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-sha1.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-sha1.Tpo -c -o repo/library/libmbedcrypto_a-sha1.o `test -f 'repo/library/sha1.c' || echo '$(srcdir)/'`repo/library/sha1.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-sha1.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-sha1.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/sha1.c' object='repo/library/libmbedcrypto_a-sha1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-sha1.o `test -f 'repo/library/sha1.c' || echo '$(srcdir)/'`repo/library/sha1.c

repo/library/libmbedcrypto_a-sha1.obj: repo/library/sha1.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-sha1.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-sha1.Tpo -c -o repo/library/libmbedcrypto_a-sha1.obj `if test -f 'repo/library/sha1.c'; then $(CYGPATH_W) 'repo/library/sha1.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/sha1.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-sha1.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-sha1.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/sha1.c' object='repo/library/libmbedcrypto_a-sha1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-sha1.obj `if test -f 'repo/library/sha1.c'; then $(CYGPATH_W) 'repo/library/sha1.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/sha1.c'; fi`

repo/library/libmbedcrypto_a-sha256.o: repo/library/sha256.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-sha256.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Tpo -c -o repo/library/libmbedcrypto_a-sha256.o `test -f 'repo/library/sha256.c' || echo '$(srcdir)/'`repo/library/sha256.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/sha256.c' object='repo/library/libmbedcrypto_a-sha256.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-sha256.o `test -f 'repo/library/sha256.c' || echo '$(srcdir)/'`repo/library/sha256.c

repo/library/libmbedcrypto_a-sha256.obj: repo/library/sha256.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-sha256.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Tpo -c -o repo/library/libmbedcrypto_a-sha256.obj `if test -f 'repo/library/sha256.c'; then $(CYGPATH_W) 'repo/library/sha256.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/sha256.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/sha256.c' object='repo/library/libmbedcrypto_a-sha256.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-sha256.obj `if test -f 'repo/library/sha256.c'; then $(CYGPATH_W) 'repo/library/sha256.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/sha256.c'; fi`

repo/library/libmbedcrypto_a-sha512.o: repo/library/sha512.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-sha512.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-sha512.Tpo -c -o repo/library/libmbedcrypto_a-sha512.o `test -f 'repo/library/sha512.c' || echo '$(srcdir)/'`repo/library/sha512.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-sha512.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-sha512.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/sha512.c' object='repo/library/libmbedcrypto_a-sha512.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-sha512.o `test -f 'repo/library/sha512.c' || echo '$(srcdir)/'`repo/library/sha512.c

repo/library/libmbedcrypto_a-sha512.obj: repo/library/sha512.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-sha512.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-sha512.Tpo -c -o repo/library/libmbedcrypto_a-sha512.obj `if test -f 'repo/library/sha512.c'; then $(CYGPATH_W) 'repo/library/sha512.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/sha512.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-sha512.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-sha512.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/sha512.c' object='repo/library/libmbedcrypto_a-sha512.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-sha512.obj `if test -f 'repo/library/sha512.c'; then $(CYGPATH_W) 'repo/library/sha512.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/sha512.c'; fi`

repo/library/libmbedcrypto_a-ssl_cache.o: repo/library/ssl_cache.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_cache.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cache.Tpo -c -o repo/library/libmbedcrypto_a-ssl_cache.o `test -f 'repo/library/ssl_cache.c' || echo '$(srcdir)/'`repo/library/ssl_cache.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cache.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cache.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_cache.c' object='repo/library/libmbedcrypto_a-ssl_cache.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_cache.o `test -f 'repo/library/ssl_cache.c' || echo '$(srcdir)/'`repo/library/ssl_cache.c

repo/library/libmbedcrypto_a-ssl_cache.obj: repo/library/ssl_cache.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_cache.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cache.Tpo -c -o repo/library/libmbedcrypto_a-ssl_cache.obj `if test -f 'repo/library/ssl_cache.c'; then $(CYGPATH_W) 'repo/library/ssl_cache.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_cache.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cache.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cache.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_cache.c' object='repo/library/libmbedcrypto_a-ssl_cache.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_cache.obj `if test -f 'repo/library/ssl_cache.c'; then $(CYGPATH_W) 'repo/library/ssl_cache.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_cache.c'; fi`

repo/library/libmbedcrypto_a-ssl_ciphersuites.o: repo/library/ssl_ciphersuites.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_ciphersuites.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Tpo -c -o repo/library/libmbedcrypto_a-ssl_ciphersuites.o `test -f 'repo/library/ssl_ciphersuites.c' || echo '$(srcdir)/'`repo/library/ssl_ciphersuites.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_ciphersuites.c' object='repo/library/libmbedcrypto_a-ssl_ciphersuites.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_ciphersuites.o `test -f 'repo/library/ssl_ciphersuites.c' || echo '$(srcdir)/'`repo/library/ssl_ciphersuites.c

repo/library/libmbedcrypto_a-ssl_ciphersuites.obj: repo/library/ssl_ciphersuites.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_ciphersuites.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Tpo -c -o repo/library/libmbedcrypto_a-ssl_ciphersuites.obj `if test -f 'repo/library/ssl_ciphersuites.c'; then $(CYGPATH_W) 'repo/library/ssl_ciphersuites.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_ciphersuites.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_ciphersuites.c' object='repo/library/libmbedcrypto_a-ssl_ciphersuites.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_ciphersuites.obj `if test -f 'repo/library/ssl_ciphersuites.c'; then $(CYGPATH_W) 'repo/library/ssl_ciphersuites.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_ciphersuites.c'; fi`

repo/library/libmbedcrypto_a-ssl_cli.o: repo/library/ssl_cli.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_cli.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Tpo -c -o repo/library/libmbedcrypto_a-ssl_cli.o `test -f 'repo/library/ssl_cli.c' || echo '$(srcdir)/'`repo/library/ssl_cli.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_cli.c' object='repo/library/libmbedcrypto_a-ssl_cli.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_cli.o `test -f 'repo/library/ssl_cli.c' || echo '$(srcdir)/'`repo/library/ssl_cli.c

repo/library/libmbedcrypto_a-ssl_cli.obj: repo/library/ssl_cli.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_cli.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Tpo -c -o repo/library/libmbedcrypto_a-ssl_cli.obj `if test -f 'repo/library/ssl_cli.c'; then $(CYGPATH_W) 'repo/library/ssl_cli.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_cli.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_cli.c' object='repo/library/libmbedcrypto_a-ssl_cli.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_cli.obj `if test -f 'repo/library/ssl_cli.c'; then $(CYGPATH_W) 'repo/library/ssl_cli.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_cli.c'; fi`

repo/library/libmbedcrypto_a-ssl_cookie.o: repo/library/ssl_cookie.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_cookie.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Tpo -c -o repo/library/libmbedcrypto_a-ssl_cookie.o `test -f 'repo/library/ssl_cookie.c' || echo '$(srcdir)/'`repo/library/ssl_cookie.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_cookie.c' object='repo/library/libmbedcrypto_a-ssl_cookie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_cookie.o `test -f 'repo/library/ssl_cookie.c' || echo '$(srcdir)/'`repo/library/ssl_cookie.c

repo/library/libmbedcrypto_a-ssl_cookie.obj: repo/library/ssl_cookie.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_cookie.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Tpo -c -o repo/library/libmbedcrypto_a-ssl_cookie.obj `if test -f 'repo/library/ssl_cookie.c'; then $(CYGPATH_W) 'repo/library/ssl_cookie.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_cookie.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_cookie.c' object='repo/library/libmbedcrypto_a-ssl_cookie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_cookie.obj `if test -f 'repo/library/ssl_cookie.c'; then $(CYGPATH_W) 'repo/library/ssl_cookie.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_cookie.c'; fi`

repo/library/libmbedcrypto_a-ssl_msg.o: repo/library/ssl_msg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_msg.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_msg.Tpo -c -o repo/library/libmbedcrypto_a-ssl_msg.o `test -f 'repo/library/ssl_msg.c' || echo '$(srcdir)/'`repo/library/ssl_msg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_msg.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_msg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_msg.c' object='repo/library/libmbedcrypto_a-ssl_msg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_msg.o `test -f 'repo/library/ssl_msg.c' || echo '$(srcdir)/'`repo/library/ssl_msg.c

repo/library/libmbedcrypto_a-ssl_msg.obj: repo/library/ssl_msg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_msg.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_msg.Tpo -c -o repo/library/libmbedcrypto_a-ssl_msg.obj `if test -f 'repo/library/ssl_msg.c'; then $(CYGPATH_W) 'repo/library/ssl_msg.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_msg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_msg.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_msg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_msg.c' object='repo/library/libmbedcrypto_a-ssl_msg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_msg.obj `if test -f 'repo/library/ssl_msg.c'; then $(CYGPATH_W) 'repo/library/ssl_msg.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_msg.c'; fi`

repo/library/libmbedcrypto_a-ssl_srv.o: repo/library/ssl_srv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_srv.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Tpo -c -o repo/library/libmbedcrypto_a-ssl_srv.o `test -f 'repo/library/ssl_srv.c' || echo '$(srcdir)/'`repo/library/ssl_srv.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_srv.c' object='repo/library/libmbedcrypto_a-ssl_srv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_srv.o `test -f 'repo/library/ssl_srv.c' || echo '$(srcdir)/'`repo/library/ssl_srv.c

repo/library/libmbedcrypto_a-ssl_srv.obj: repo/library/ssl_srv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_srv.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Tpo -c -o repo/library/libmbedcrypto_a-ssl_srv.obj `if test -f 'repo/library/ssl_srv.c'; then $(CYGPATH_W) 'repo/library/ssl_srv.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_srv.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_srv.c' object='repo/library/libmbedcrypto_a-ssl_srv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_srv.obj `if test -f 'repo/library/ssl_srv.c'; then $(CYGPATH_W) 'repo/library/ssl_srv.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_srv.c'; fi`

repo/library/libmbedcrypto_a-ssl_ticket.o: repo/library/ssl_ticket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_ticket.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Tpo -c -o repo/library/libmbedcrypto_a-ssl_ticket.o `test -f 'repo/library/ssl_ticket.c' || echo '$(srcdir)/'`repo/library/ssl_ticket.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_ticket.c' object='repo/library/libmbedcrypto_a-ssl_ticket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_ticket.o `test -f 'repo/library/ssl_ticket.c' || echo '$(srcdir)/'`repo/library/ssl_ticket.c

repo/library/libmbedcrypto_a-ssl_ticket.obj: repo/library/ssl_ticket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_ticket.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Tpo -c -o repo/library/libmbedcrypto_a-ssl_ticket.obj `if test -f 'repo/library/ssl_ticket.c'; then $(CYGPATH_W) 'repo/library/ssl_ticket.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_ticket.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_ticket.c' object='repo/library/libmbedcrypto_a-ssl_ticket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_ticket.obj `if test -f 'repo/library/ssl_ticket.c'; then $(CYGPATH_W) 'repo/library/ssl_ticket.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_ticket.c'; fi`

repo/library/libmbedcrypto_a-ssl_tls.o: repo/library/ssl_tls.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_tls.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Tpo -c -o repo/library/libmbedcrypto_a-ssl_tls.o `test -f 'repo/library/ssl_tls.c' || echo '$(srcdir)/'`repo/library/ssl_tls.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_tls.c' object='repo/library/libmbedcrypto_a-ssl_tls.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_tls.o `test -f 'repo/library/ssl_tls.c' || echo '$(srcdir)/'`repo/library/ssl_tls.c

repo/library/libmbedcrypto_a-ssl_tls.obj: repo/library/ssl_tls.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_tls.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Tpo -c -o repo/library/libmbedcrypto_a-ssl_tls.obj `if test -f 'repo/library/ssl_tls.c'; then $(CYGPATH_W) 'repo/library/ssl_tls.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_tls.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_tls.c' object='repo/library/libmbedcrypto_a-ssl_tls.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_tls.obj `if test -f 'repo/library/ssl_tls.c'; then $(CYGPATH_W) 'repo/library/ssl_tls.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_tls.c'; fi`

repo/library/libmbedcrypto_a-ssl_tls13_keys.o: repo/library/ssl_tls13_keys.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_tls13_keys.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls13_keys.Tpo -c -o repo/library/libmbedcrypto_a-ssl_tls13_keys.o `test -f 'repo/library/ssl_tls13_keys.c' || echo '$(srcdir)/'`repo/library/ssl_tls13_keys.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls13_keys.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls13_keys.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_tls13_keys.c' object='repo/library/libmbedcrypto_a-ssl_tls13_keys.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_tls13_keys.o `test -f 'repo/library/ssl_tls13_keys.c' || echo '$(srcdir)/'`repo/library/ssl_tls13_keys.c

repo/library/libmbedcrypto_a-ssl_tls13_keys.obj: repo/library/ssl_tls13_keys.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-ssl_tls13_keys.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls13_keys.Tpo -c -o repo/library/libmbedcrypto_a-ssl_tls13_keys.obj `if test -f 'repo/library/ssl_tls13_keys.c'; then $(CYGPATH_W) 'repo/library/ssl_tls13_keys.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_tls13_keys.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls13_keys.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls13_keys.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/ssl_tls13_keys.c' object='repo/library/libmbedcrypto_a-ssl_tls13_keys.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-ssl_tls13_keys.obj `if test -f 'repo/library/ssl_tls13_keys.c'; then $(CYGPATH_W) 'repo/library/ssl_tls13_keys.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/ssl_tls13_keys.c'; fi`

repo/library/libmbedcrypto_a-threading.o: repo/library/threading.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-threading.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-threading.Tpo -c -o repo/library/libmbedcrypto_a-threading.o `test -f 'repo/library/threading.c' || echo '$(srcdir)/'`repo/library/threading.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-threading.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-threading.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/threading.c' object='repo/library/libmbedcrypto_a-threading.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-threading.o `test -f 'repo/library/threading.c' || echo '$(srcdir)/'`repo/library/threading.c

repo/library/libmbedcrypto_a-threading.obj: repo/library/threading.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-threading.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-threading.Tpo -c -o repo/library/libmbedcrypto_a-threading.obj `if test -f 'repo/library/threading.c'; then $(CYGPATH_W) 'repo/library/threading.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/threading.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-threading.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-threading.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/threading.c' object='repo/library/libmbedcrypto_a-threading.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-threading.obj `if test -f 'repo/library/threading.c'; then $(CYGPATH_W) 'repo/library/threading.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/threading.c'; fi`

repo/library/libmbedcrypto_a-timing.o: repo/library/timing.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-timing.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-timing.Tpo -c -o repo/library/libmbedcrypto_a-timing.o `test -f 'repo/library/timing.c' || echo '$(srcdir)/'`repo/library/timing.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-timing.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-timing.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/timing.c' object='repo/library/libmbedcrypto_a-timing.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-timing.o `test -f 'repo/library/timing.c' || echo '$(srcdir)/'`repo/library/timing.c

repo/library/libmbedcrypto_a-timing.obj: repo/library/timing.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-timing.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-timing.Tpo -c -o repo/library/libmbedcrypto_a-timing.obj `if test -f 'repo/library/timing.c'; then $(CYGPATH_W) 'repo/library/timing.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/timing.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-timing.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-timing.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/timing.c' object='repo/library/libmbedcrypto_a-timing.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-timing.obj `if test -f 'repo/library/timing.c'; then $(CYGPATH_W) 'repo/library/timing.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/timing.c'; fi`

repo/library/libmbedcrypto_a-version.o: repo/library/version.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-version.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-version.Tpo -c -o repo/library/libmbedcrypto_a-version.o `test -f 'repo/library/version.c' || echo '$(srcdir)/'`repo/library/version.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-version.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-version.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/version.c' object='repo/library/libmbedcrypto_a-version.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-version.o `test -f 'repo/library/version.c' || echo '$(srcdir)/'`repo/library/version.c

repo/library/libmbedcrypto_a-version.obj: repo/library/version.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-version.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-version.Tpo -c -o repo/library/libmbedcrypto_a-version.obj `if test -f 'repo/library/version.c'; then $(CYGPATH_W) 'repo/library/version.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/version.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-version.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-version.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/version.c' object='repo/library/libmbedcrypto_a-version.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-version.obj `if test -f 'repo/library/version.c'; then $(CYGPATH_W) 'repo/library/version.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/version.c'; fi`

repo/library/libmbedcrypto_a-version_features.o: repo/library/version_features.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-version_features.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-version_features.Tpo -c -o repo/library/libmbedcrypto_a-version_features.o `test -f 'repo/library/version_features.c' || echo '$(srcdir)/'`repo/library/version_features.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-version_features.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-version_features.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/version_features.c' object='repo/library/libmbedcrypto_a-version_features.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-version_features.o `test -f 'repo/library/version_features.c' || echo '$(srcdir)/'`repo/library/version_features.c

repo/library/libmbedcrypto_a-version_features.obj: repo/library/version_features.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-version_features.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-version_features.Tpo -c -o repo/library/libmbedcrypto_a-version_features.obj `if test -f 'repo/library/version_features.c'; then $(CYGPATH_W) 'repo/library/version_features.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/version_features.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-version_features.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-version_features.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/version_features.c' object='repo/library/libmbedcrypto_a-version_features.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-version_features.obj `if test -f 'repo/library/version_features.c'; then $(CYGPATH_W) 'repo/library/version_features.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/version_features.c'; fi`

repo/library/libmbedcrypto_a-x509.o: repo/library/x509.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Tpo -c -o repo/library/libmbedcrypto_a-x509.o `test -f 'repo/library/x509.c' || echo '$(srcdir)/'`repo/library/x509.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509.c' object='repo/library/libmbedcrypto_a-x509.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509.o `test -f 'repo/library/x509.c' || echo '$(srcdir)/'`repo/library/x509.c

repo/library/libmbedcrypto_a-x509.obj: repo/library/x509.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Tpo -c -o repo/library/libmbedcrypto_a-x509.obj `if test -f 'repo/library/x509.c'; then $(CYGPATH_W) 'repo/library/x509.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509.c' object='repo/library/libmbedcrypto_a-x509.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509.obj `if test -f 'repo/library/x509.c'; then $(CYGPATH_W) 'repo/library/x509.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509.c'; fi`

repo/library/libmbedcrypto_a-x509_create.o: repo/library/x509_create.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509_create.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509_create.Tpo -c -o repo/library/libmbedcrypto_a-x509_create.o `test -f 'repo/library/x509_create.c' || echo '$(srcdir)/'`repo/library/x509_create.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509_create.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509_create.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509_create.c' object='repo/library/libmbedcrypto_a-x509_create.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509_create.o `test -f 'repo/library/x509_create.c' || echo '$(srcdir)/'`repo/library/x509_create.c

repo/library/libmbedcrypto_a-x509_create.obj: repo/library/x509_create.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509_create.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509_create.Tpo -c -o repo/library/libmbedcrypto_a-x509_create.obj `if test -f 'repo/library/x509_create.c'; then $(CYGPATH_W) 'repo/library/x509_create.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509_create.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509_create.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509_create.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509_create.c' object='repo/library/libmbedcrypto_a-x509_create.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509_create.obj `if test -f 'repo/library/x509_create.c'; then $(CYGPATH_W) 'repo/library/x509_create.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509_create.c'; fi`

repo/library/libmbedcrypto_a-x509_crl.o: repo/library/x509_crl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509_crl.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crl.Tpo -c -o repo/library/libmbedcrypto_a-x509_crl.o `test -f 'repo/library/x509_crl.c' || echo '$(srcdir)/'`repo/library/x509_crl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crl.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509_crl.c' object='repo/library/libmbedcrypto_a-x509_crl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509_crl.o `test -f 'repo/library/x509_crl.c' || echo '$(srcdir)/'`repo/library/x509_crl.c

repo/library/libmbedcrypto_a-x509_crl.obj: repo/library/x509_crl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509_crl.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crl.Tpo -c -o repo/library/libmbedcrypto_a-x509_crl.obj `if test -f 'repo/library/x509_crl.c'; then $(CYGPATH_W) 'repo/library/x509_crl.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509_crl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crl.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509_crl.c' object='repo/library/libmbedcrypto_a-x509_crl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509_crl.obj `if test -f 'repo/library/x509_crl.c'; then $(CYGPATH_W) 'repo/library/x509_crl.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509_crl.c'; fi`

repo/library/libmbedcrypto_a-x509_crt.o: repo/library/x509_crt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509_crt.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Tpo -c -o repo/library/libmbedcrypto_a-x509_crt.o `test -f 'repo/library/x509_crt.c' || echo '$(srcdir)/'`repo/library/x509_crt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509_crt.c' object='repo/library/libmbedcrypto_a-x509_crt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509_crt.o `test -f 'repo/library/x509_crt.c' || echo '$(srcdir)/'`repo/library/x509_crt.c

repo/library/libmbedcrypto_a-x509_crt.obj: repo/library/x509_crt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509_crt.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Tpo -c -o repo/library/libmbedcrypto_a-x509_crt.obj `if test -f 'repo/library/x509_crt.c'; then $(CYGPATH_W) 'repo/library/x509_crt.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509_crt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509_crt.c' object='repo/library/libmbedcrypto_a-x509_crt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509_crt.obj `if test -f 'repo/library/x509_crt.c'; then $(CYGPATH_W) 'repo/library/x509_crt.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509_crt.c'; fi`

repo/library/libmbedcrypto_a-x509_csr.o: repo/library/x509_csr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509_csr.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509_csr.Tpo -c -o repo/library/libmbedcrypto_a-x509_csr.o `test -f 'repo/library/x509_csr.c' || echo '$(srcdir)/'`repo/library/x509_csr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509_csr.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509_csr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509_csr.c' object='repo/library/libmbedcrypto_a-x509_csr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509_csr.o `test -f 'repo/library/x509_csr.c' || echo '$(srcdir)/'`repo/library/x509_csr.c

repo/library/libmbedcrypto_a-x509_csr.obj: repo/library/x509_csr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509_csr.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509_csr.Tpo -c -o repo/library/libmbedcrypto_a-x509_csr.obj `if test -f 'repo/library/x509_csr.c'; then $(CYGPATH_W) 'repo/library/x509_csr.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509_csr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509_csr.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509_csr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509_csr.c' object='repo/library/libmbedcrypto_a-x509_csr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509_csr.obj `if test -f 'repo/library/x509_csr.c'; then $(CYGPATH_W) 'repo/library/x509_csr.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509_csr.c'; fi`

repo/library/libmbedcrypto_a-x509write_crt.o: repo/library/x509write_crt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509write_crt.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_crt.Tpo -c -o repo/library/libmbedcrypto_a-x509write_crt.o `test -f 'repo/library/x509write_crt.c' || echo '$(srcdir)/'`repo/library/x509write_crt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_crt.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_crt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509write_crt.c' object='repo/library/libmbedcrypto_a-x509write_crt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509write_crt.o `test -f 'repo/library/x509write_crt.c' || echo '$(srcdir)/'`repo/library/x509write_crt.c

repo/library/libmbedcrypto_a-x509write_crt.obj: repo/library/x509write_crt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509write_crt.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_crt.Tpo -c -o repo/library/libmbedcrypto_a-x509write_crt.obj `if test -f 'repo/library/x509write_crt.c'; then $(CYGPATH_W) 'repo/library/x509write_crt.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509write_crt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_crt.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_crt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509write_crt.c' object='repo/library/libmbedcrypto_a-x509write_crt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509write_crt.obj `if test -f 'repo/library/x509write_crt.c'; then $(CYGPATH_W) 'repo/library/x509write_crt.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509write_crt.c'; fi`

repo/library/libmbedcrypto_a-x509write_csr.o: repo/library/x509write_csr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509write_csr.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_csr.Tpo -c -o repo/library/libmbedcrypto_a-x509write_csr.o `test -f 'repo/library/x509write_csr.c' || echo '$(srcdir)/'`repo/library/x509write_csr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_csr.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_csr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509write_csr.c' object='repo/library/libmbedcrypto_a-x509write_csr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509write_csr.o `test -f 'repo/library/x509write_csr.c' || echo '$(srcdir)/'`repo/library/x509write_csr.c

repo/library/libmbedcrypto_a-x509write_csr.obj: repo/library/x509write_csr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-x509write_csr.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_csr.Tpo -c -o repo/library/libmbedcrypto_a-x509write_csr.obj `if test -f 'repo/library/x509write_csr.c'; then $(CYGPATH_W) 'repo/library/x509write_csr.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509write_csr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_csr.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_csr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/x509write_csr.c' object='repo/library/libmbedcrypto_a-x509write_csr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-x509write_csr.obj `if test -f 'repo/library/x509write_csr.c'; then $(CYGPATH_W) 'repo/library/x509write_csr.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/x509write_csr.c'; fi`

repo/library/libmbedcrypto_a-xtea.o: repo/library/xtea.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-xtea.o -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-xtea.Tpo -c -o repo/library/libmbedcrypto_a-xtea.o `test -f 'repo/library/xtea.c' || echo '$(srcdir)/'`repo/library/xtea.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-xtea.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-xtea.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/xtea.c' object='repo/library/libmbedcrypto_a-xtea.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-xtea.o `test -f 'repo/library/xtea.c' || echo '$(srcdir)/'`repo/library/xtea.c

repo/library/libmbedcrypto_a-xtea.obj: repo/library/xtea.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT repo/library/libmbedcrypto_a-xtea.obj -MD -MP -MF repo/library/$(DEPDIR)/libmbedcrypto_a-xtea.Tpo -c -o repo/library/libmbedcrypto_a-xtea.obj `if test -f 'repo/library/xtea.c'; then $(CYGPATH_W) 'repo/library/xtea.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/xtea.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) repo/library/$(DEPDIR)/libmbedcrypto_a-xtea.Tpo repo/library/$(DEPDIR)/libmbedcrypto_a-xtea.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='repo/library/xtea.c' object='repo/library/libmbedcrypto_a-xtea.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libmbedcrypto_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o repo/library/libmbedcrypto_a-xtea.obj `if test -f 'repo/library/xtea.c'; then $(CYGPATH_W) 'repo/library/xtea.c'; else $(CYGPATH_W) '$(srcdir)/repo/library/xtea.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f repo/library/$(DEPDIR)/$(am__dirstamp)
	-rm -f repo/library/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-aesni.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-arc4.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-aria.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-blowfish.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-camellia.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-certs.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-chacha20.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-chachapoly.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-constant_time.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-des.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-dhm.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-error.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-gcm.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-havege.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-hkdf.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-hmac_drbg.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-md.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-md2.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-md4.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-md5.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-mps_reader.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-mps_trace.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-net_sockets.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-nist_kw.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-padlock.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs11.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs12.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs5.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pkwrite.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-poly1305.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_aead.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_cipher.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_client.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_driver_wrappers.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_ecp.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_hash.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_mac.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_rsa.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_se.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_slot_management.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_storage.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_its_file.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ripemd160.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-rsa.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-rsa_internal.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-sha1.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-sha512.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cache.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_msg.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls13_keys.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-threading.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-timing.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-version.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-version_features.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509_create.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crl.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509_csr.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_crt.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_csr.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-xtea.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_radio_a-aes.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_radio_a-platform_util.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-aes.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-aesni.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-arc4.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-aria.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-asn1parse.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-asn1write.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-base64.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-bignum.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-blowfish.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-camellia.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ccm.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-certs.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-chacha20.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-chachapoly.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-cipher.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-cipher_wrap.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-cmac.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-constant_time.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ctr_drbg.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-debug.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-des.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-dhm.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ecdh.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ecdsa.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ecjpake.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ecp.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ecp_curves.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-entropy.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-entropy_poll.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-error.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-gcm.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-havege.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-hkdf.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-hmac_drbg.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-md.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-md2.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-md4.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-md5.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-memory_buffer_alloc.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-mps_reader.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-mps_trace.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-net_sockets.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-nist_kw.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-oid.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-padlock.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pem.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pk.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pk_wrap.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs11.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs12.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pkcs5.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pkparse.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-pkwrite.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-platform.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-platform_util.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-poly1305.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_aead.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_cipher.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_client.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_driver_wrappers.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_ecp.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_hash.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_mac.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_rsa.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_se.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_slot_management.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_crypto_storage.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-psa_its_file.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ripemd160.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-rsa.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-rsa_internal.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-sha1.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-sha256.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-sha512.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cache.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ciphersuites.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cli.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_cookie.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_msg.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_srv.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_ticket.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-ssl_tls13_keys.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-threading.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-timing.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-version.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-version_features.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509_create.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crl.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509_crt.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509_csr.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_crt.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-x509write_csr.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_a-xtea.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_radio_a-aes.Po
	-rm -f repo/library/$(DEPDIR)/libmbedcrypto_radio_a-platform_util.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libLIBRARIES clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLIBRARIES

.PRECIOUS: Makefile


include $(abs_top_nlbuild_autotools_dir)/automake/pre.am

# Do not enable -Wconversion for mbedtls
override CFLAGS                              := $(filter-out -Wconversion,$(CFLAGS))
override CXXFLAGS                            := $(filter-out -Wconversion,$(CXXFLAGS))

# Do not enable -pedantic-errors for mbedtls
override CFLAGS                              := $(filter-out -pedantic-errors,$(CFLAGS))
override CXXFLAGS                            := $(filter-out -pedantic-errors,$(CXXFLAGS))

# Do not enable -Wcast-align for mbedtls
override CFLAGS                              := $(filter-out -Wcast-align,$(CFLAGS))
override CXXFLAGS                            := $(filter-out -Wcast-align,$(CXXFLAGS))

include $(abs_top_nlbuild_autotools_dir)/automake/post.am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
