# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("//build_overrides/openthread.gni")
import("//build_overrides/rt58x_sdk.gni")

import("${chip_root}/src/platform/device.gni")
import("${rt58x_sdk_build_root}/rt58x_sdk.gni")

openthread_rt58x_root = "${chip_root}/third_party/openthread/ot-rt58x"

config("openthread_rt58x_config") {
  include_dirs = [ "${chip_root}/examples/platform/rt58x" ]
}

source_set("openthread_core_config_rt58x") {
  sources = [
    "${chip_root}/examples/platform/rt58x/project_include/OpenThreadConfig.h",
    "${openthread_rt58x_root}/openthread/src/cli/cli_config.h",
  ]
  public_deps = [ "${rt58x_sdk_build_root}:rt58x_sdk" ]

  public_configs = [ ":openthread_rt58x_config" ]
}

source_set("libopenthread-rt58x") {
  deps = [
    ":openthread-rt58x-platform",
    ":openthread-rt58x-root",
  ]
}

static_library("openthread-rt58x-platform") {
  public_deps = [
    ":openthread_core_config_rt58x",
    "${openthread_rt58x_root}/openthread/src/core:libopenthread_core_headers",
    "..:libopenthread-platform",
    "..:libopenthread-platform-utils",
  ]
  include_dirs = [ "${chip_root}/examples/platform/rt58x/project_include/" ]

  if (chip_openthread_ftd) {
    #public_configs = [ "${openthread_rt58x_root}/openthread:openthread_ftd_config" ]
    libs = [ "${openthread_rt58x_root}/openthread/libopenthread-ftd.a" ]
  } else {
    #public_configs = [ "${openthread_rt58x_root}/openthread:openthread_mtd_config" ]
    libs = [ "${openthread_rt58x_root}/openthread/libopenthread-mtd.a" ]
  }

  libs += [ "${chip_root}/third_party/rafael/sdk/Library/libotrt58xplatform.a" ]
}

static_library("openthread-rt58x-root") {
  public_deps = [
    ":openthread_core_config_rt58x",
    "${openthread_rt58x_root}/openthread/src/core:libopenthread_core_headers",
    "..:libopenthread-platform",
    "..:libopenthread-platform-utils",
  ]
  include_dirs = [ "${chip_root}/examples/platform/rt58x/project_include/" ]

  if (chip_openthread_ftd) {
    #public_configs = [ "${openthread_rt58x_root}/openthread:openthread_ftd_config" ]
    libs = [ "${openthread_rt58x_root}/openthread/libopenthread-ftd.a" ]
  } else {
    #public_configs = [ "${openthread_rt58x_root}/openthread:openthread_mtd_config" ]
    libs = [ "${openthread_rt58x_root}/openthread/libopenthread-mtd.a" ]
  }

  libs += [ "${chip_root}/third_party/rafael/sdk/Library/libotrt58x.a" ]
}
