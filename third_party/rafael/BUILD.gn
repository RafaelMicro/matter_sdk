# Copyright (c) 2020 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("//build_overrides/rt582_sdk.gni")
import("//build_overrides/jlink.gni")
import("${chip_root}/src/platform/device.gni")
import("${rt582_sdk_build_root}/rt582_sdk.gni")

# import("//build_overrides/openthread.gni")
import("//build_overrides/mbedtls.gni")
import("${mbedtls_root}/mbedtls.gni")

declare_args() {
  # Build target to use for rt582 SDK. Use this to set global SDK defines.
  rt582_sdk_target = ""
  rf_ot_rt582_root = "${chip_root}/third_party/openthread/ot-rt582"
  rf_openthread_root = "${chip_root}/third_party/openthread/ot-rt582/openthread"
  use_thread_coap_lib = false
}

assert(rt582_sdk_target != "", "rt582_sdk_target must be specified")

group("rt582_sdk") {
  public_deps = [ rt582_sdk_target ]
}

config("mbedtls_rt582_config") {
  defines = [
    "MBEDTLS_CONFIG_FILE=<third_party/openthread/ot-rt582/openthread/third_party/mbedtls/mbedtls-config.h>",
    "MBEDTLS_USER_CONFIG_FILE=<src/platform/RT582/rt582-chip-mbedtls-config.h>",
  ]

  include_dirs = [ chip_root ]
}

mbedtls_target("mbedtls") {
  sources = [
    # "${chip_root}/third_party/openthread/ot-ifx/src/cyw30739/mbedtls/library/aes_alt.c",
    # "${chip_root}/third_party/openthread/ot-ifx/src/cyw30739/mbedtls/library/ccm_alt.c",
    # "${chip_root}/third_party/openthread/ot-ifx/src/cyw30739/mbedtls/library/sha256_alt.c",
  ]

  public_configs = [ ":mbedtls_rt582_config" ]

  public_deps = [ "${rf_openthread_root}/src/core:libopenthread_core_headers" ]
}
